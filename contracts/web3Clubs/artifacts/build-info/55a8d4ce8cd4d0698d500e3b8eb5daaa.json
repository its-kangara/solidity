{
	"id": "55a8d4ce8cd4d0698d500e3b8eb5daaa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/web3Clubs/web3ClubsToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n// imports\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ncontract web3ClubsToken is Ownable {\n      using SafeMath for uint256;\n\n    // global Var\n    string public tokenName = \"web3ClubsToken\";\n    string public symbol = \"WCT\";\n    uint public decimals = 18; // 0.000000000000000009 // 9000000000000000000\n    uint public decimalFactor = 10 ** uint256(decimals);  // 10^18 10^2 0.00\n    uint public totalSupply = 1000000 * decimalFactor; // 0.00000000001\n    // uint public balanceOf; // balance of address\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    \n\n    // mapping \n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    constructor() {\n      balanceOf[msg.sender] = totalSupply;\n    }\n\n\n    // todo add safemath method for subtractions and addition\n    function transfer(address _to, uint256 _value ) public returns (bool success) {\n        require(balanceOf[msg.sender] >= _value);\n        balanceOf[msg.sender] -= _value;\n        balanceOf[_to] += _value;\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint _value) public returns (bool success) {\n      allowance[msg.sender][_spender] = _value;\n      emit Approval(msg.sender, _spender, _value);\n      return success;\n    }\n\n    // todo add safemath for  sub and addition \n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= balanceOf[_from]);\n        require(_value <= allowance[_from][msg.sender]);\n        balanceOf[_to] += _value;\n        allowance[_from][msg.sender] -= _value;\n        emit Transfer(_from, _to, _value);\n        return true;\n  \n    }\n    \n    // do your own implementation\n    function mintToken() public view  onlyOwner {\n\n    }\n\n\n\n\n    \n}\n\n\n\n\n\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/web3Clubs/web3ClubsToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/web3Clubs/web3ClubsToken.sol": {
				"web3ClubsToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimalFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintToken",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/web3Clubs/web3ClubsToken.sol\":182:2087  contract web3ClubsToken is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":276:318  string public tokenName = \"web3ClubsToken\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x77656233436c756273546f6b656e000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x01\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":324:352  string public symbol = \"WCT\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5743540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x02\n  swap1\n  dup2\n  tag_3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":381:383  18 */\n  0x12\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":358:383  uint public decimals = 18 */\n  0x03\n  sstore\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":478:486  decimals */\n  sload(0x03)\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":464:466  10 */\n  0x0a\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":464:487  10 ** uint256(decimals) */\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":436:487  uint public decimalFactor = 10 ** uint256(decimals) */\n  0x04\n  sstore\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":549:562  decimalFactor */\n  sload(0x04)\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":539:546  1000000 */\n  0x0f4240\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":539:562  1000000 * decimalFactor */\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":513:562  uint public totalSupply = 1000000 * decimalFactor */\n  0x05\n  sstore\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":948:1012  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_8\n  jumpi\n  0x00\n  dup1\n  revert\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":994:1005  totalSupply */\n  sload(0x05)\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":970:979  balanceOf */\n  0x06\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":970:991  balanceOf[msg.sender] */\n  0x00\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":980:990  msg.sender */\n  caller\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":970:991  balanceOf[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":970:1005  balanceOf[msg.sender] = totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":182:2087  contract web3ClubsToken is Ownable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_20:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_21:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_22:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_23:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_49:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_51\n  tag_22\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":714:798   */\ntag_50:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_24:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_25:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_26:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_27:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_56\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1429:1468   */\n  tag_57\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_26\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_28:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_29:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_30:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_61\n    /* \"#utility.yul\":1818:1852   */\n  tag_62\n    /* \"#utility.yul\":1827:1851   */\n  tag_63\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1818:1852   */\n  tag_29\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1800:1853   */\n  tag_28\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_31:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_32:\n    /* \"#utility.yul\":2056:2095   */\n  tag_66\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_30\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2117:2208   */\n  tag_67\n    /* \"#utility.yul\":2166:2207   */\n  tag_68\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_31\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_27\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_33:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_34:\n    /* \"#utility.yul\":2377:2409   */\n  tag_71\n  tag_33\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2418:2483   */\n  tag_72\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_32\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_35:\n    /* \"#utility.yul\":2555:2675   */\ntag_74:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_77\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_34\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_74)\ntag_76:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_36:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_80\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_24\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2906:2935   */\n  tag_81\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_25\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_82:\n    /* \"#utility.yul\":3133:3213   */\n  tag_83\n    /* \"#utility.yul\":3189:3211   */\n  tag_84\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_25\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_35\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_79:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_37:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_38:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_87\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_37\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_39:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_89\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_38\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_91\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_20\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_93\n  tag_21\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4038:4094   */\ntag_92:\n    /* \"#utility.yul\":4118:4156   */\n  tag_94\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_23\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4203:4270   */\n  tag_95\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_36\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_97\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_98:\n    /* \"#utility.yul\":5144:5211   */\n  tag_99\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_39\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_96)\n    /* \"#utility.yul\":4365:4983   */\ntag_97:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_100\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_24\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_101:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_101)\ntag_103:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_105\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_38\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_104:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_96:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5414   */\ntag_40:\n    /* \"#utility.yul\":5282:5359   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5279:5280   */\n  0x00\n    /* \"#utility.yul\":5272:5360   */\n  mstore\n    /* \"#utility.yul\":5379:5383   */\n  0x11\n    /* \"#utility.yul\":5376:5377   */\n  0x04\n    /* \"#utility.yul\":5369:5384   */\n  mstore\n    /* \"#utility.yul\":5403:5407   */\n  0x24\n    /* \"#utility.yul\":5400:5401   */\n  0x00\n    /* \"#utility.yul\":5393:5408   */\n  revert\n    /* \"#utility.yul\":5420:5522   */\ntag_41:\n    /* \"#utility.yul\":5462:5470   */\n  0x00\n    /* \"#utility.yul\":5509:5514   */\n  dup2\n    /* \"#utility.yul\":5506:5507   */\n  0x01\n    /* \"#utility.yul\":5502:5515   */\n  shr\n    /* \"#utility.yul\":5481:5515   */\n  swap1\n  pop\n    /* \"#utility.yul\":5420:5522   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5528:6376   */\ntag_42:\n    /* \"#utility.yul\":5589:5594   */\n  0x00\n    /* \"#utility.yul\":5596:5600   */\n  dup1\n    /* \"#utility.yul\":5620:5626   */\n  dup3\n    /* \"#utility.yul\":5611:5626   */\n  swap2\n  pop\n    /* \"#utility.yul\":5644:5649   */\n  dup4\n    /* \"#utility.yul\":5635:5649   */\n  swap1\n  pop\n    /* \"#utility.yul\":5658:6370   */\ntag_109:\n    /* \"#utility.yul\":5679:5680   */\n  0x01\n    /* \"#utility.yul\":5669:5677   */\n  dup6\n    /* \"#utility.yul\":5666:5681   */\n  gt\n    /* \"#utility.yul\":5658:6370   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5774:5778   */\n  dup1\n    /* \"#utility.yul\":5769:5772   */\n  dup7\n    /* \"#utility.yul\":5765:5779   */\n  div\n    /* \"#utility.yul\":5759:5763   */\n  dup2\n    /* \"#utility.yul\":5756:5780   */\n  gt\n    /* \"#utility.yul\":5753:5803   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":5783:5801   */\n  tag_113\n  tag_40\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5753:5803   */\ntag_112:\n    /* \"#utility.yul\":5833:5834   */\n  0x01\n    /* \"#utility.yul\":5823:5831   */\n  dup6\n    /* \"#utility.yul\":5819:5835   */\n  and\n    /* \"#utility.yul\":5816:6267   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":6248:6252   */\n  dup1\n    /* \"#utility.yul\":6241:6246   */\n  dup3\n    /* \"#utility.yul\":6237:6253   */\n  mul\n    /* \"#utility.yul\":6228:6253   */\n  swap2\n  pop\n    /* \"#utility.yul\":5816:6267   */\ntag_114:\n    /* \"#utility.yul\":6298:6302   */\n  dup1\n    /* \"#utility.yul\":6292:6296   */\n  dup2\n    /* \"#utility.yul\":6288:6303   */\n  mul\n    /* \"#utility.yul\":6280:6303   */\n  swap1\n  pop\n    /* \"#utility.yul\":6328:6360   */\n  tag_115\n    /* \"#utility.yul\":6351:6359   */\n  dup6\n    /* \"#utility.yul\":6328:6360   */\n  tag_41\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":6316:6360   */\n  swap5\n  pop\n    /* \"#utility.yul\":5658:6370   */\n  jump(tag_109)\ntag_111:\n    /* \"#utility.yul\":5528:6376   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6382:7455   */\ntag_43:\n    /* \"#utility.yul\":6436:6441   */\n  0x00\n    /* \"#utility.yul\":6627:6635   */\n  dup3\n    /* \"#utility.yul\":6617:6657   */\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6648:6649   */\n  0x01\n    /* \"#utility.yul\":6639:6649   */\n  swap1\n  pop\n    /* \"#utility.yul\":6650:6655   */\n  jump(tag_116)\n    /* \"#utility.yul\":6617:6657   */\ntag_117:\n    /* \"#utility.yul\":6676:6680   */\n  dup2\n    /* \"#utility.yul\":6666:6702   */\n  tag_118\n  jumpi\n    /* \"#utility.yul\":6693:6694   */\n  0x00\n    /* \"#utility.yul\":6684:6694   */\n  swap1\n  pop\n    /* \"#utility.yul\":6695:6700   */\n  jump(tag_116)\n    /* \"#utility.yul\":6666:6702   */\ntag_118:\n    /* \"#utility.yul\":6762:6766   */\n  dup2\n    /* \"#utility.yul\":6810:6811   */\n  0x01\n    /* \"#utility.yul\":6805:6832   */\n  dup2\n  eq\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6846:6847   */\n  0x02\n    /* \"#utility.yul\":6841:7032   */\n  dup2\n  eq\n  tag_121\n  jumpi\n    /* \"#utility.yul\":6755:7032   */\n  jump(tag_119)\n    /* \"#utility.yul\":6805:6832   */\ntag_120:\n    /* \"#utility.yul\":6823:6824   */\n  0x01\n    /* \"#utility.yul\":6814:6824   */\n  swap2\n  pop\n    /* \"#utility.yul\":6825:6830   */\n  pop\n  jump(tag_116)\n    /* \"#utility.yul\":6841:7032   */\ntag_121:\n    /* \"#utility.yul\":6886:6889   */\n  0xff\n    /* \"#utility.yul\":6876:6884   */\n  dup5\n    /* \"#utility.yul\":6873:6890   */\n  gt\n    /* \"#utility.yul\":6870:6913   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6893:6911   */\n  tag_123\n  tag_40\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6870:6913   */\ntag_122:\n    /* \"#utility.yul\":6942:6950   */\n  dup4\n    /* \"#utility.yul\":6939:6940   */\n  0x02\n    /* \"#utility.yul\":6935:6951   */\n  exp\n    /* \"#utility.yul\":6926:6951   */\n  swap2\n  pop\n    /* \"#utility.yul\":6977:6980   */\n  dup5\n    /* \"#utility.yul\":6970:6975   */\n  dup3\n    /* \"#utility.yul\":6967:6981   */\n  gt\n    /* \"#utility.yul\":6964:7004   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":6984:7002   */\n  tag_125\n  tag_40\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6964:7004   */\ntag_124:\n    /* \"#utility.yul\":7017:7022   */\n  pop\n  jump(tag_116)\n    /* \"#utility.yul\":6755:7032   */\ntag_119:\n  pop\n    /* \"#utility.yul\":7141:7143   */\n  0x20\n    /* \"#utility.yul\":7131:7139   */\n  dup4\n    /* \"#utility.yul\":7128:7144   */\n  lt\n    /* \"#utility.yul\":7122:7125   */\n  0x0133\n    /* \"#utility.yul\":7116:7120   */\n  dup4\n    /* \"#utility.yul\":7113:7126   */\n  lt\n    /* \"#utility.yul\":7109:7145   */\n  and\n    /* \"#utility.yul\":7091:7093   */\n  0x4e\n    /* \"#utility.yul\":7081:7089   */\n  dup5\n    /* \"#utility.yul\":7078:7094   */\n  lt\n    /* \"#utility.yul\":7073:7075   */\n  0x0b\n    /* \"#utility.yul\":7067:7071   */\n  dup5\n    /* \"#utility.yul\":7064:7076   */\n  lt\n    /* \"#utility.yul\":7060:7095   */\n  and\n    /* \"#utility.yul\":7044:7155   */\n  or\n    /* \"#utility.yul\":7041:7287   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":7197:7205   */\n  dup3\n    /* \"#utility.yul\":7191:7195   */\n  dup3\n    /* \"#utility.yul\":7187:7206   */\n  exp\n    /* \"#utility.yul\":7178:7206   */\n  swap1\n  pop\n    /* \"#utility.yul\":7232:7235   */\n  dup4\n    /* \"#utility.yul\":7225:7230   */\n  dup2\n    /* \"#utility.yul\":7222:7236   */\n  gt\n    /* \"#utility.yul\":7219:7259   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":7239:7257   */\n  tag_128\n  tag_40\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":7219:7259   */\ntag_127:\n    /* \"#utility.yul\":7272:7277   */\n  jump(tag_116)\n    /* \"#utility.yul\":7041:7287   */\ntag_126:\n    /* \"#utility.yul\":7312:7354   */\n  tag_129\n    /* \"#utility.yul\":7350:7353   */\n  dup5\n    /* \"#utility.yul\":7340:7348   */\n  dup5\n    /* \"#utility.yul\":7334:7338   */\n  dup5\n    /* \"#utility.yul\":7331:7332   */\n  0x01\n    /* \"#utility.yul\":7312:7354   */\n  tag_42\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7297:7354   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7386:7390   */\n  dup2\n    /* \"#utility.yul\":7381:7384   */\n  dup5\n    /* \"#utility.yul\":7377:7391   */\n  div\n    /* \"#utility.yul\":7370:7375   */\n  dup2\n    /* \"#utility.yul\":7367:7392   */\n  gt\n    /* \"#utility.yul\":7364:7415   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7395:7413   */\n  tag_131\n  tag_40\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7364:7415   */\ntag_130:\n    /* \"#utility.yul\":7444:7448   */\n  dup2\n    /* \"#utility.yul\":7437:7442   */\n  dup2\n    /* \"#utility.yul\":7433:7449   */\n  mul\n    /* \"#utility.yul\":7424:7449   */\n  swap1\n  pop\n    /* \"#utility.yul\":6382:7455   */\ntag_116:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7461:7746   */\ntag_5:\n    /* \"#utility.yul\":7521:7526   */\n  0x00\n    /* \"#utility.yul\":7545:7568   */\n  tag_133\n    /* \"#utility.yul\":7563:7567   */\n  dup3\n    /* \"#utility.yul\":7545:7568   */\n  tag_28\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7537:7568   */\n  swap2\n  pop\n    /* \"#utility.yul\":7589:7616   */\n  tag_134\n    /* \"#utility.yul\":7607:7615   */\n  dup4\n    /* \"#utility.yul\":7589:7616   */\n  tag_28\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7577:7616   */\n  swap3\n  pop\n    /* \"#utility.yul\":7635:7739   */\n  tag_135\n    /* \"#utility.yul\":7672:7738   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7662:7670   */\n  dup5\n    /* \"#utility.yul\":7656:7660   */\n  dup5\n    /* \"#utility.yul\":7635:7739   */\n  tag_43\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7626:7739   */\n  swap1\n  pop\n    /* \"#utility.yul\":7461:7746   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7752:8162   */\ntag_7:\n    /* \"#utility.yul\":7792:7799   */\n  0x00\n    /* \"#utility.yul\":7815:7835   */\n  tag_137\n    /* \"#utility.yul\":7833:7834   */\n  dup3\n    /* \"#utility.yul\":7815:7835   */\n  tag_28\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7810:7835   */\n  swap2\n  pop\n    /* \"#utility.yul\":7849:7869   */\n  tag_138\n    /* \"#utility.yul\":7867:7868   */\n  dup4\n    /* \"#utility.yul\":7849:7869   */\n  tag_28\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7844:7869   */\n  swap3\n  pop\n    /* \"#utility.yul\":7904:7905   */\n  dup3\n    /* \"#utility.yul\":7901:7902   */\n  dup3\n    /* \"#utility.yul\":7897:7906   */\n  mul\n    /* \"#utility.yul\":7926:7956   */\n  tag_139\n    /* \"#utility.yul\":7944:7955   */\n  dup2\n    /* \"#utility.yul\":7926:7956   */\n  tag_28\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":7915:7956   */\n  swap2\n  pop\n    /* \"#utility.yul\":8105:8106   */\n  dup3\n    /* \"#utility.yul\":8096:8103   */\n  dup3\n    /* \"#utility.yul\":8092:8107   */\n  div\n    /* \"#utility.yul\":8089:8090   */\n  dup5\n    /* \"#utility.yul\":8086:8108   */\n  eq\n    /* \"#utility.yul\":8066:8067   */\n  dup4\n    /* \"#utility.yul\":8059:8068   */\n  iszero\n    /* \"#utility.yul\":8039:8122   */\n  or\n    /* \"#utility.yul\":8016:8155   */\n  tag_140\n  jumpi\n    /* \"#utility.yul\":8135:8153   */\n  tag_141\n  tag_40\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":8016:8155   */\ntag_140:\n    /* \"#utility.yul\":7800:8162   */\n  pop\n    /* \"#utility.yul\":7752:8162   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/web3Clubs/web3ClubsToken.sol\":182:2087  contract web3ClubsToken is Ownable {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":182:2087  contract web3ClubsToken is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6c02a931\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6d6a6a4d\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2004ffd9\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1366:1572  function approve(address _spender, uint _value) public returns (bool success) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":513:562  uint public totalSupply = 1000000 * decimalFactor */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":2024:2076  function mintToken() public view  onlyOwner {... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1626:1980  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":358:383  uint public decimals = 18 */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":276:318  string public tokenName = \"web3ClubsToken\" */\n    tag_8:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":436:487  uint public decimalFactor = 10 ** uint256(decimals) */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":827:871  mapping(address => uint256) public balanceOf */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":324:352  string public symbol = \"WCT\" */\n    tag_13:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1081:1360  function transfer(address _to, uint256 _value ) public returns (bool success) {... */\n    tag_14:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":877:941  mapping(address => mapping(address => uint256)) public allowance */\n    tag_15:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1366:1572  function approve(address _spender, uint _value) public returns (bool success) {... */\n    tag_23:\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1430:1442  bool success */\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1486:1492  _value */\n      dup2\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1452:1461  allowance */\n      0x07\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1452:1473  allowance[msg.sender] */\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1462:1472  msg.sender */\n      caller\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1452:1473  allowance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1452:1483  allowance[msg.sender][_spender] */\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1474:1482  _spender */\n      dup6\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1452:1483  allowance[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1452:1492  allowance[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1526:1534  _spender */\n      dup3\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1505:1543  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1514:1524  msg.sender */\n      caller\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1505:1543  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1536:1542  _value */\n      dup5\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1505:1543  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1366:1572  function approve(address _spender, uint _value) public returns (bool success) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":513:562  uint public totalSupply = 1000000 * decimalFactor */\n    tag_27:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":2024:2076  function mintToken() public view  onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_76:\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":2024:2076  function mintToken() public view  onlyOwner {... */\n      jump\t// out\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1626:1980  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {... */\n    tag_35:\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1708:1720  bool success */\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1750:1759  balanceOf */\n      0x06\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1750:1766  balanceOf[_from] */\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1760:1765  _from */\n      dup6\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1750:1766  balanceOf[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1740:1746  _value */\n      dup3\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1740:1766  _value <= balanceOf[_from] */\n      gt\n      iszero\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1732:1767  require(_value <= balanceOf[_from]) */\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1795:1804  allowance */\n      0x07\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1795:1811  allowance[_from] */\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1805:1810  _from */\n      dup6\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1795:1811  allowance[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1795:1823  allowance[_from][msg.sender] */\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1812:1822  msg.sender */\n      caller\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1795:1823  allowance[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1785:1791  _value */\n      dup3\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1785:1823  _value <= allowance[_from][msg.sender] */\n      gt\n      iszero\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1777:1824  require(_value <= allowance[_from][msg.sender]) */\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1852:1858  _value */\n      dup2\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1834:1843  balanceOf */\n      0x06\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1834:1848  balanceOf[_to] */\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1844:1847  _to */\n      dup6\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1834:1848  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1834:1858  balanceOf[_to] += _value */\n      dup3\n      dup3\n      sload\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1900:1906  _value */\n      dup2\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1868:1877  allowance */\n      0x07\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1868:1884  allowance[_from] */\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1878:1883  _from */\n      dup7\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1868:1884  allowance[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1868:1896  allowance[_from][msg.sender] */\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1885:1895  msg.sender */\n      caller\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1868:1896  allowance[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1868:1906  allowance[_from][msg.sender] -= _value */\n      dup3\n      dup3\n      sload\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1937:1940  _to */\n      dup3\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1921:1949  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1930:1935  _from */\n      dup5\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1921:1949  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1942:1948  _value */\n      dup5\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1921:1949  Transfer(_from, _to, _value) */\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1966:1970  true */\n      0x01\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1959:1970  return true */\n      swap1\n      pop\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1626:1980  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":358:383  uint public decimals = 18 */\n    tag_38:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":276:318  string public tokenName = \"web3ClubsToken\" */\n    tag_41:\n      0x01\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_88\n      jump\t// in\n    tag_89:\n      dup1\n      iszero\n      tag_90\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_91\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_90)\n    tag_91:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_92:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_92\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":436:487  uint public decimalFactor = 10 ** uint256(decimals) */\n    tag_45:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":827:871  mapping(address => uint256) public balanceOf */\n    tag_50:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":324:352  string public symbol = \"WCT\" */\n    tag_59:\n      0x02\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_88\n      jump\t// in\n    tag_99:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_100\n      swap1\n      tag_88\n      jump\t// in\n    tag_100:\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_102\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_101)\n    tag_102:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_103:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_103\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1081:1360  function transfer(address _to, uint256 _value ) public returns (bool success) {... */\n    tag_63:\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1145:1157  bool success */\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1202:1208  _value */\n      dup2\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1177:1186  balanceOf */\n      0x06\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1177:1198  balanceOf[msg.sender] */\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1187:1197  msg.sender */\n      caller\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1177:1198  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1177:1208  balanceOf[msg.sender] >= _value */\n      lt\n      iszero\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1169:1209  require(balanceOf[msg.sender] >= _value) */\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1244:1250  _value */\n      dup2\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1219:1228  balanceOf */\n      0x06\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1219:1240  balanceOf[msg.sender] */\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1229:1239  msg.sender */\n      caller\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1219:1240  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1219:1250  balanceOf[msg.sender] -= _value */\n      dup3\n      dup3\n      sload\n      tag_106\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_106:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1278:1284  _value */\n      dup2\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1260:1269  balanceOf */\n      0x06\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1260:1274  balanceOf[_to] */\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1270:1273  _to */\n      dup6\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1260:1274  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1260:1284  balanceOf[_to] += _value */\n      dup3\n      dup3\n      sload\n      tag_107\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_107:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1320:1323  _to */\n      dup3\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1299:1332  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1308:1318  msg.sender */\n      caller\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1299:1332  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1325:1331  _value */\n      dup5\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1299:1332  Transfer(msg.sender, _to, _value) */\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1349:1353  true */\n      0x01\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1342:1353  return true */\n      swap1\n      pop\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":1081:1360  function transfer(address _to, uint256 _value ) public returns (bool success) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/web3Clubs/web3ClubsToken.sol\":877:941  mapping(address => mapping(address => uint256)) public allowance */\n    tag_68:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_126:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_128:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_129:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_156\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_128\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_130:\n        /* \"#utility.yul\":641:665   */\n      tag_158\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_129\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_159:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_131:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_161\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_130\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_132:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_133:\n        /* \"#utility.yul\":997:1021   */\n      tag_164\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_132\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_165:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_134:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_167\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_133\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_22:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_170\n      tag_126\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":1290:1409   */\n    tag_169:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_171\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_131\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_172\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_134\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1767   */\n    tag_135:\n        /* \"#utility.yul\":1711:1718   */\n      0x00\n        /* \"#utility.yul\":1754:1759   */\n      dup2\n        /* \"#utility.yul\":1747:1760   */\n      iszero\n        /* \"#utility.yul\":1740:1761   */\n      iszero\n        /* \"#utility.yul\":1729:1761   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1773:1882   */\n    tag_136:\n        /* \"#utility.yul\":1854:1875   */\n      tag_175\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1854:1875   */\n      tag_135\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1849:1852   */\n      dup3\n        /* \"#utility.yul\":1842:1876   */\n      mstore\n        /* \"#utility.yul\":1773:1882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1888:2098   */\n    tag_25:\n        /* \"#utility.yul\":1975:1979   */\n      0x00\n        /* \"#utility.yul\":2013:2015   */\n      0x20\n        /* \"#utility.yul\":2002:2011   */\n      dup3\n        /* \"#utility.yul\":1998:2016   */\n      add\n        /* \"#utility.yul\":1990:2016   */\n      swap1\n      pop\n        /* \"#utility.yul\":2026:2091   */\n      tag_177\n        /* \"#utility.yul\":2088:2089   */\n      0x00\n        /* \"#utility.yul\":2077:2086   */\n      dup4\n        /* \"#utility.yul\":2073:2090   */\n      add\n        /* \"#utility.yul\":2064:2070   */\n      dup5\n        /* \"#utility.yul\":2026:2091   */\n      tag_136\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1888:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2222   */\n    tag_137:\n        /* \"#utility.yul\":2191:2215   */\n      tag_179\n        /* \"#utility.yul\":2209:2214   */\n      dup2\n        /* \"#utility.yul\":2191:2215   */\n      tag_132\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2186:2189   */\n      dup3\n        /* \"#utility.yul\":2179:2216   */\n      mstore\n        /* \"#utility.yul\":2104:2222   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2228:2450   */\n    tag_29:\n        /* \"#utility.yul\":2321:2325   */\n      0x00\n        /* \"#utility.yul\":2359:2361   */\n      0x20\n        /* \"#utility.yul\":2348:2357   */\n      dup3\n        /* \"#utility.yul\":2344:2362   */\n      add\n        /* \"#utility.yul\":2336:2362   */\n      swap1\n      pop\n        /* \"#utility.yul\":2372:2443   */\n      tag_181\n        /* \"#utility.yul\":2440:2441   */\n      0x00\n        /* \"#utility.yul\":2429:2438   */\n      dup4\n        /* \"#utility.yul\":2425:2442   */\n      add\n        /* \"#utility.yul\":2416:2422   */\n      dup5\n        /* \"#utility.yul\":2372:2443   */\n      tag_137\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2228:2450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2456:3075   */\n    tag_34:\n        /* \"#utility.yul\":2533:2539   */\n      0x00\n        /* \"#utility.yul\":2541:2547   */\n      dup1\n        /* \"#utility.yul\":2549:2555   */\n      0x00\n        /* \"#utility.yul\":2598:2600   */\n      0x60\n        /* \"#utility.yul\":2586:2595   */\n      dup5\n        /* \"#utility.yul\":2577:2584   */\n      dup7\n        /* \"#utility.yul\":2573:2596   */\n      sub\n        /* \"#utility.yul\":2569:2601   */\n      slt\n        /* \"#utility.yul\":2566:2685   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":2604:2683   */\n      tag_184\n      tag_126\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2566:2685   */\n    tag_183:\n        /* \"#utility.yul\":2724:2725   */\n      0x00\n        /* \"#utility.yul\":2749:2802   */\n      tag_185\n        /* \"#utility.yul\":2794:2801   */\n      dup7\n        /* \"#utility.yul\":2785:2791   */\n      dup3\n        /* \"#utility.yul\":2774:2783   */\n      dup8\n        /* \"#utility.yul\":2770:2792   */\n      add\n        /* \"#utility.yul\":2749:2802   */\n      tag_131\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2739:2802   */\n      swap4\n      pop\n        /* \"#utility.yul\":2695:2812   */\n      pop\n        /* \"#utility.yul\":2851:2853   */\n      0x20\n        /* \"#utility.yul\":2877:2930   */\n      tag_186\n        /* \"#utility.yul\":2922:2929   */\n      dup7\n        /* \"#utility.yul\":2913:2919   */\n      dup3\n        /* \"#utility.yul\":2902:2911   */\n      dup8\n        /* \"#utility.yul\":2898:2920   */\n      add\n        /* \"#utility.yul\":2877:2930   */\n      tag_131\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2867:2930   */\n      swap3\n      pop\n        /* \"#utility.yul\":2822:2940   */\n      pop\n        /* \"#utility.yul\":2979:2981   */\n      0x40\n        /* \"#utility.yul\":3005:3058   */\n      tag_187\n        /* \"#utility.yul\":3050:3057   */\n      dup7\n        /* \"#utility.yul\":3041:3047   */\n      dup3\n        /* \"#utility.yul\":3030:3039   */\n      dup8\n        /* \"#utility.yul\":3026:3048   */\n      add\n        /* \"#utility.yul\":3005:3058   */\n      tag_134\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2995:3058   */\n      swap2\n      pop\n        /* \"#utility.yul\":2950:3068   */\n      pop\n        /* \"#utility.yul\":2456:3075   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3081:3180   */\n    tag_138:\n        /* \"#utility.yul\":3133:3139   */\n      0x00\n        /* \"#utility.yul\":3167:3172   */\n      dup2\n        /* \"#utility.yul\":3161:3173   */\n      mload\n        /* \"#utility.yul\":3151:3173   */\n      swap1\n      pop\n        /* \"#utility.yul\":3081:3180   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3186:3355   */\n    tag_139:\n        /* \"#utility.yul\":3270:3281   */\n      0x00\n        /* \"#utility.yul\":3304:3310   */\n      dup3\n        /* \"#utility.yul\":3299:3302   */\n      dup3\n        /* \"#utility.yul\":3292:3311   */\n      mstore\n        /* \"#utility.yul\":3344:3348   */\n      0x20\n        /* \"#utility.yul\":3339:3342   */\n      dup3\n        /* \"#utility.yul\":3335:3349   */\n      add\n        /* \"#utility.yul\":3320:3349   */\n      swap1\n      pop\n        /* \"#utility.yul\":3186:3355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3361:3607   */\n    tag_140:\n        /* \"#utility.yul\":3442:3443   */\n      0x00\n        /* \"#utility.yul\":3452:3565   */\n    tag_191:\n        /* \"#utility.yul\":3466:3472   */\n      dup4\n        /* \"#utility.yul\":3463:3464   */\n      dup2\n        /* \"#utility.yul\":3460:3473   */\n      lt\n        /* \"#utility.yul\":3452:3565   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":3551:3552   */\n      dup1\n        /* \"#utility.yul\":3546:3549   */\n      dup3\n        /* \"#utility.yul\":3542:3553   */\n      add\n        /* \"#utility.yul\":3536:3554   */\n      mload\n        /* \"#utility.yul\":3532:3533   */\n      dup2\n        /* \"#utility.yul\":3527:3530   */\n      dup5\n        /* \"#utility.yul\":3523:3534   */\n      add\n        /* \"#utility.yul\":3516:3555   */\n      mstore\n        /* \"#utility.yul\":3488:3490   */\n      0x20\n        /* \"#utility.yul\":3485:3486   */\n      dup2\n        /* \"#utility.yul\":3481:3491   */\n      add\n        /* \"#utility.yul\":3476:3491   */\n      swap1\n      pop\n        /* \"#utility.yul\":3452:3565   */\n      jump(tag_191)\n    tag_193:\n        /* \"#utility.yul\":3599:3600   */\n      0x00\n        /* \"#utility.yul\":3590:3596   */\n      dup5\n        /* \"#utility.yul\":3585:3588   */\n      dup5\n        /* \"#utility.yul\":3581:3597   */\n      add\n        /* \"#utility.yul\":3574:3601   */\n      mstore\n        /* \"#utility.yul\":3423:3607   */\n      pop\n        /* \"#utility.yul\":3361:3607   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3613:3715   */\n    tag_141:\n        /* \"#utility.yul\":3654:3660   */\n      0x00\n        /* \"#utility.yul\":3705:3707   */\n      0x1f\n        /* \"#utility.yul\":3701:3708   */\n      not\n        /* \"#utility.yul\":3696:3698   */\n      0x1f\n        /* \"#utility.yul\":3689:3694   */\n      dup4\n        /* \"#utility.yul\":3685:3699   */\n      add\n        /* \"#utility.yul\":3681:3709   */\n      and\n        /* \"#utility.yul\":3671:3709   */\n      swap1\n      pop\n        /* \"#utility.yul\":3613:3715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3721:4098   */\n    tag_142:\n        /* \"#utility.yul\":3809:3812   */\n      0x00\n        /* \"#utility.yul\":3837:3876   */\n      tag_196\n        /* \"#utility.yul\":3870:3875   */\n      dup3\n        /* \"#utility.yul\":3837:3876   */\n      tag_138\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3892:3963   */\n      tag_197\n        /* \"#utility.yul\":3956:3962   */\n      dup2\n        /* \"#utility.yul\":3951:3954   */\n      dup6\n        /* \"#utility.yul\":3892:3963   */\n      tag_139\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3885:3963   */\n      swap4\n      pop\n        /* \"#utility.yul\":3972:4037   */\n      tag_198\n        /* \"#utility.yul\":4030:4036   */\n      dup2\n        /* \"#utility.yul\":4025:4028   */\n      dup6\n        /* \"#utility.yul\":4018:4022   */\n      0x20\n        /* \"#utility.yul\":4011:4016   */\n      dup7\n        /* \"#utility.yul\":4007:4023   */\n      add\n        /* \"#utility.yul\":3972:4037   */\n      tag_140\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4062:4091   */\n      tag_199\n        /* \"#utility.yul\":4084:4090   */\n      dup2\n        /* \"#utility.yul\":4062:4091   */\n      tag_141\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4057:4060   */\n      dup5\n        /* \"#utility.yul\":4053:4092   */\n      add\n        /* \"#utility.yul\":4046:4092   */\n      swap2\n      pop\n        /* \"#utility.yul\":3813:4098   */\n      pop\n        /* \"#utility.yul\":3721:4098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4104:4417   */\n    tag_43:\n        /* \"#utility.yul\":4217:4221   */\n      0x00\n        /* \"#utility.yul\":4255:4257   */\n      0x20\n        /* \"#utility.yul\":4244:4253   */\n      dup3\n        /* \"#utility.yul\":4240:4258   */\n      add\n        /* \"#utility.yul\":4232:4258   */\n      swap1\n      pop\n        /* \"#utility.yul\":4304:4313   */\n      dup2\n        /* \"#utility.yul\":4298:4302   */\n      dup2\n        /* \"#utility.yul\":4294:4314   */\n      sub\n        /* \"#utility.yul\":4290:4291   */\n      0x00\n        /* \"#utility.yul\":4279:4288   */\n      dup4\n        /* \"#utility.yul\":4275:4292   */\n      add\n        /* \"#utility.yul\":4268:4315   */\n      mstore\n        /* \"#utility.yul\":4332:4410   */\n      tag_201\n        /* \"#utility.yul\":4405:4409   */\n      dup2\n        /* \"#utility.yul\":4396:4402   */\n      dup5\n        /* \"#utility.yul\":4332:4410   */\n      tag_142\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4324:4410   */\n      swap1\n      pop\n        /* \"#utility.yul\":4104:4417   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4423:4752   */\n    tag_49:\n        /* \"#utility.yul\":4482:4488   */\n      0x00\n        /* \"#utility.yul\":4531:4533   */\n      0x20\n        /* \"#utility.yul\":4519:4528   */\n      dup3\n        /* \"#utility.yul\":4510:4517   */\n      dup5\n        /* \"#utility.yul\":4506:4529   */\n      sub\n        /* \"#utility.yul\":4502:4534   */\n      slt\n        /* \"#utility.yul\":4499:4618   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":4537:4616   */\n      tag_204\n      tag_126\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4499:4618   */\n    tag_203:\n        /* \"#utility.yul\":4657:4658   */\n      0x00\n        /* \"#utility.yul\":4682:4735   */\n      tag_205\n        /* \"#utility.yul\":4727:4734   */\n      dup5\n        /* \"#utility.yul\":4718:4724   */\n      dup3\n        /* \"#utility.yul\":4707:4716   */\n      dup6\n        /* \"#utility.yul\":4703:4725   */\n      add\n        /* \"#utility.yul\":4682:4735   */\n      tag_131\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4672:4735   */\n      swap2\n      pop\n        /* \"#utility.yul\":4628:4745   */\n      pop\n        /* \"#utility.yul\":4423:4752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4758:4876   */\n    tag_143:\n        /* \"#utility.yul\":4845:4869   */\n      tag_207\n        /* \"#utility.yul\":4863:4868   */\n      dup2\n        /* \"#utility.yul\":4845:4869   */\n      tag_129\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4840:4843   */\n      dup3\n        /* \"#utility.yul\":4833:4870   */\n      mstore\n        /* \"#utility.yul\":4758:4876   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4882:5104   */\n    tag_57:\n        /* \"#utility.yul\":4975:4979   */\n      0x00\n        /* \"#utility.yul\":5013:5015   */\n      0x20\n        /* \"#utility.yul\":5002:5011   */\n      dup3\n        /* \"#utility.yul\":4998:5016   */\n      add\n        /* \"#utility.yul\":4990:5016   */\n      swap1\n      pop\n        /* \"#utility.yul\":5026:5097   */\n      tag_209\n        /* \"#utility.yul\":5094:5095   */\n      0x00\n        /* \"#utility.yul\":5083:5092   */\n      dup4\n        /* \"#utility.yul\":5079:5096   */\n      add\n        /* \"#utility.yul\":5070:5076   */\n      dup5\n        /* \"#utility.yul\":5026:5097   */\n      tag_143\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":4882:5104   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5110:5584   */\n    tag_67:\n        /* \"#utility.yul\":5178:5184   */\n      0x00\n        /* \"#utility.yul\":5186:5192   */\n      dup1\n        /* \"#utility.yul\":5235:5237   */\n      0x40\n        /* \"#utility.yul\":5223:5232   */\n      dup4\n        /* \"#utility.yul\":5214:5221   */\n      dup6\n        /* \"#utility.yul\":5210:5233   */\n      sub\n        /* \"#utility.yul\":5206:5238   */\n      slt\n        /* \"#utility.yul\":5203:5322   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":5241:5320   */\n      tag_212\n      tag_126\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5203:5322   */\n    tag_211:\n        /* \"#utility.yul\":5361:5362   */\n      0x00\n        /* \"#utility.yul\":5386:5439   */\n      tag_213\n        /* \"#utility.yul\":5431:5438   */\n      dup6\n        /* \"#utility.yul\":5422:5428   */\n      dup3\n        /* \"#utility.yul\":5411:5420   */\n      dup7\n        /* \"#utility.yul\":5407:5429   */\n      add\n        /* \"#utility.yul\":5386:5439   */\n      tag_131\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5376:5439   */\n      swap3\n      pop\n        /* \"#utility.yul\":5332:5449   */\n      pop\n        /* \"#utility.yul\":5488:5490   */\n      0x20\n        /* \"#utility.yul\":5514:5567   */\n      tag_214\n        /* \"#utility.yul\":5559:5566   */\n      dup6\n        /* \"#utility.yul\":5550:5556   */\n      dup3\n        /* \"#utility.yul\":5539:5548   */\n      dup7\n        /* \"#utility.yul\":5535:5557   */\n      add\n        /* \"#utility.yul\":5514:5567   */\n      tag_131\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5504:5567   */\n      swap2\n      pop\n        /* \"#utility.yul\":5459:5577   */\n      pop\n        /* \"#utility.yul\":5110:5584   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5590:5770   */\n    tag_144:\n        /* \"#utility.yul\":5638:5715   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5635:5636   */\n      0x00\n        /* \"#utility.yul\":5628:5716   */\n      mstore\n        /* \"#utility.yul\":5735:5739   */\n      0x11\n        /* \"#utility.yul\":5732:5733   */\n      0x04\n        /* \"#utility.yul\":5725:5740   */\n      mstore\n        /* \"#utility.yul\":5759:5763   */\n      0x24\n        /* \"#utility.yul\":5756:5757   */\n      0x00\n        /* \"#utility.yul\":5749:5764   */\n      revert\n        /* \"#utility.yul\":5776:5967   */\n    tag_83:\n        /* \"#utility.yul\":5816:5819   */\n      0x00\n        /* \"#utility.yul\":5835:5855   */\n      tag_217\n        /* \"#utility.yul\":5853:5854   */\n      dup3\n        /* \"#utility.yul\":5835:5855   */\n      tag_132\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5830:5855   */\n      swap2\n      pop\n        /* \"#utility.yul\":5869:5889   */\n      tag_218\n        /* \"#utility.yul\":5887:5888   */\n      dup4\n        /* \"#utility.yul\":5869:5889   */\n      tag_132\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5864:5889   */\n      swap3\n      pop\n        /* \"#utility.yul\":5912:5913   */\n      dup3\n        /* \"#utility.yul\":5909:5910   */\n      dup3\n        /* \"#utility.yul\":5905:5914   */\n      add\n        /* \"#utility.yul\":5898:5914   */\n      swap1\n      pop\n        /* \"#utility.yul\":5933:5936   */\n      dup1\n        /* \"#utility.yul\":5930:5931   */\n      dup3\n        /* \"#utility.yul\":5927:5937   */\n      gt\n        /* \"#utility.yul\":5924:5960   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":5940:5958   */\n      tag_220\n      tag_144\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5924:5960   */\n    tag_219:\n        /* \"#utility.yul\":5776:5967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5973:6167   */\n    tag_85:\n        /* \"#utility.yul\":6013:6017   */\n      0x00\n        /* \"#utility.yul\":6033:6053   */\n      tag_222\n        /* \"#utility.yul\":6051:6052   */\n      dup3\n        /* \"#utility.yul\":6033:6053   */\n      tag_132\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6028:6053   */\n      swap2\n      pop\n        /* \"#utility.yul\":6067:6087   */\n      tag_223\n        /* \"#utility.yul\":6085:6086   */\n      dup4\n        /* \"#utility.yul\":6067:6087   */\n      tag_132\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":6062:6087   */\n      swap3\n      pop\n        /* \"#utility.yul\":6111:6112   */\n      dup3\n        /* \"#utility.yul\":6108:6109   */\n      dup3\n        /* \"#utility.yul\":6104:6113   */\n      sub\n        /* \"#utility.yul\":6096:6113   */\n      swap1\n      pop\n        /* \"#utility.yul\":6135:6136   */\n      dup2\n        /* \"#utility.yul\":6129:6133   */\n      dup2\n        /* \"#utility.yul\":6126:6137   */\n      gt\n        /* \"#utility.yul\":6123:6160   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":6140:6158   */\n      tag_225\n      tag_144\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6123:6160   */\n    tag_224:\n        /* \"#utility.yul\":5973:6167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6173:6353   */\n    tag_145:\n        /* \"#utility.yul\":6221:6298   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6218:6219   */\n      0x00\n        /* \"#utility.yul\":6211:6299   */\n      mstore\n        /* \"#utility.yul\":6318:6322   */\n      0x22\n        /* \"#utility.yul\":6315:6316   */\n      0x04\n        /* \"#utility.yul\":6308:6323   */\n      mstore\n        /* \"#utility.yul\":6342:6346   */\n      0x24\n        /* \"#utility.yul\":6339:6340   */\n      0x00\n        /* \"#utility.yul\":6332:6347   */\n      revert\n        /* \"#utility.yul\":6359:6679   */\n    tag_88:\n        /* \"#utility.yul\":6403:6409   */\n      0x00\n        /* \"#utility.yul\":6440:6441   */\n      0x02\n        /* \"#utility.yul\":6434:6438   */\n      dup3\n        /* \"#utility.yul\":6430:6442   */\n      div\n        /* \"#utility.yul\":6420:6442   */\n      swap1\n      pop\n        /* \"#utility.yul\":6487:6488   */\n      0x01\n        /* \"#utility.yul\":6481:6485   */\n      dup3\n        /* \"#utility.yul\":6477:6489   */\n      and\n        /* \"#utility.yul\":6508:6526   */\n      dup1\n        /* \"#utility.yul\":6498:6579   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":6564:6568   */\n      0x7f\n        /* \"#utility.yul\":6556:6562   */\n      dup3\n        /* \"#utility.yul\":6552:6569   */\n      and\n        /* \"#utility.yul\":6542:6569   */\n      swap2\n      pop\n        /* \"#utility.yul\":6498:6579   */\n    tag_228:\n        /* \"#utility.yul\":6626:6628   */\n      0x20\n        /* \"#utility.yul\":6618:6624   */\n      dup3\n        /* \"#utility.yul\":6615:6629   */\n      lt\n        /* \"#utility.yul\":6595:6613   */\n      dup2\n        /* \"#utility.yul\":6592:6630   */\n      sub\n        /* \"#utility.yul\":6589:6673   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":6645:6663   */\n      tag_230\n      tag_145\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":6589:6673   */\n    tag_229:\n        /* \"#utility.yul\":6410:6679   */\n      pop\n        /* \"#utility.yul\":6359:6679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6685:6910   */\n    tag_146:\n        /* \"#utility.yul\":6825:6859   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6821:6822   */\n      0x00\n        /* \"#utility.yul\":6813:6819   */\n      dup3\n        /* \"#utility.yul\":6809:6823   */\n      add\n        /* \"#utility.yul\":6802:6860   */\n      mstore\n        /* \"#utility.yul\":6894:6902   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6889:6891   */\n      0x20\n        /* \"#utility.yul\":6881:6887   */\n      dup3\n        /* \"#utility.yul\":6877:6892   */\n      add\n        /* \"#utility.yul\":6870:6903   */\n      mstore\n        /* \"#utility.yul\":6685:6910   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6916:7282   */\n    tag_147:\n        /* \"#utility.yul\":7058:7061   */\n      0x00\n        /* \"#utility.yul\":7079:7146   */\n      tag_233\n        /* \"#utility.yul\":7143:7145   */\n      0x26\n        /* \"#utility.yul\":7138:7141   */\n      dup4\n        /* \"#utility.yul\":7079:7146   */\n      tag_139\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7072:7146   */\n      swap2\n      pop\n        /* \"#utility.yul\":7155:7248   */\n      tag_234\n        /* \"#utility.yul\":7244:7247   */\n      dup3\n        /* \"#utility.yul\":7155:7248   */\n      tag_146\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":7273:7275   */\n      0x40\n        /* \"#utility.yul\":7268:7271   */\n      dup3\n        /* \"#utility.yul\":7264:7276   */\n      add\n        /* \"#utility.yul\":7257:7276   */\n      swap1\n      pop\n        /* \"#utility.yul\":6916:7282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7288:7707   */\n    tag_114:\n        /* \"#utility.yul\":7454:7458   */\n      0x00\n        /* \"#utility.yul\":7492:7494   */\n      0x20\n        /* \"#utility.yul\":7481:7490   */\n      dup3\n        /* \"#utility.yul\":7477:7495   */\n      add\n        /* \"#utility.yul\":7469:7495   */\n      swap1\n      pop\n        /* \"#utility.yul\":7541:7550   */\n      dup2\n        /* \"#utility.yul\":7535:7539   */\n      dup2\n        /* \"#utility.yul\":7531:7551   */\n      sub\n        /* \"#utility.yul\":7527:7528   */\n      0x00\n        /* \"#utility.yul\":7516:7525   */\n      dup4\n        /* \"#utility.yul\":7512:7529   */\n      add\n        /* \"#utility.yul\":7505:7552   */\n      mstore\n        /* \"#utility.yul\":7569:7700   */\n      tag_236\n        /* \"#utility.yul\":7695:7699   */\n      dup2\n        /* \"#utility.yul\":7569:7700   */\n      tag_147\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":7561:7700   */\n      swap1\n      pop\n        /* \"#utility.yul\":7288:7707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7713:7895   */\n    tag_148:\n        /* \"#utility.yul\":7853:7887   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7849:7850   */\n      0x00\n        /* \"#utility.yul\":7841:7847   */\n      dup3\n        /* \"#utility.yul\":7837:7851   */\n      add\n        /* \"#utility.yul\":7830:7888   */\n      mstore\n        /* \"#utility.yul\":7713:7895   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7901:8267   */\n    tag_149:\n        /* \"#utility.yul\":8043:8046   */\n      0x00\n        /* \"#utility.yul\":8064:8131   */\n      tag_239\n        /* \"#utility.yul\":8128:8130   */\n      0x20\n        /* \"#utility.yul\":8123:8126   */\n      dup4\n        /* \"#utility.yul\":8064:8131   */\n      tag_139\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8057:8131   */\n      swap2\n      pop\n        /* \"#utility.yul\":8140:8233   */\n      tag_240\n        /* \"#utility.yul\":8229:8232   */\n      dup3\n        /* \"#utility.yul\":8140:8233   */\n      tag_148\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":8258:8260   */\n      0x20\n        /* \"#utility.yul\":8253:8256   */\n      dup3\n        /* \"#utility.yul\":8249:8261   */\n      add\n        /* \"#utility.yul\":8242:8261   */\n      swap1\n      pop\n        /* \"#utility.yul\":7901:8267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8273:8692   */\n    tag_122:\n        /* \"#utility.yul\":8439:8443   */\n      0x00\n        /* \"#utility.yul\":8477:8479   */\n      0x20\n        /* \"#utility.yul\":8466:8475   */\n      dup3\n        /* \"#utility.yul\":8462:8480   */\n      add\n        /* \"#utility.yul\":8454:8480   */\n      swap1\n      pop\n        /* \"#utility.yul\":8526:8535   */\n      dup2\n        /* \"#utility.yul\":8520:8524   */\n      dup2\n        /* \"#utility.yul\":8516:8536   */\n      sub\n        /* \"#utility.yul\":8512:8513   */\n      0x00\n        /* \"#utility.yul\":8501:8510   */\n      dup4\n        /* \"#utility.yul\":8497:8514   */\n      add\n        /* \"#utility.yul\":8490:8537   */\n      mstore\n        /* \"#utility.yul\":8554:8685   */\n      tag_242\n        /* \"#utility.yul\":8680:8684   */\n      dup2\n        /* \"#utility.yul\":8554:8685   */\n      tag_149\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":8546:8685   */\n      swap1\n      pop\n        /* \"#utility.yul\":8273:8692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220985efeb1f155be530bf918ee752e6eaba719d4ea5984b2039b4be32c7f65cb2264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_514": {
									"entryPoint": null,
									"id": 514,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 315,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 323,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1444,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 1771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1535,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 998,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1384,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 577,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8165:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:4",
														"type": ""
													}
												],
												"src": "7:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:4"
															},
															"nodeType": "YulIf",
															"src": "623:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:4"
															},
															"nodeType": "YulIf",
															"src": "714:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:4",
														"type": ""
													}
												],
												"src": "484:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:4",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:4",
														"type": ""
													}
												],
												"src": "810:141:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:4"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:4",
														"type": ""
													}
												],
												"src": "957:93:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:4"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:4"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:4",
														"type": ""
													}
												],
												"src": "1056:107:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:4",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:4"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:4"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:4"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:4"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:4"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:4"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:4",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:4",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:4",
														"type": ""
													}
												],
												"src": "1169:393:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:4",
														"type": ""
													}
												],
												"src": "1568:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:4",
														"type": ""
													}
												],
												"src": "1651:60:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:4",
														"type": ""
													}
												],
												"src": "1717:142:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:4"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:4",
														"type": ""
													}
												],
												"src": "1865:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:4",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:4"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:4"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:4"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:4"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:4"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:4"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:4",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:4",
														"type": ""
													}
												],
												"src": "1946:269:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:4",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:4"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:4",
														"type": ""
													}
												],
												"src": "2221:73:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:4"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:4"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:4"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:4"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:4"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:4",
														"type": ""
													}
												],
												"src": "2300:189:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:4"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:4",
																"statements": []
															},
															"src": "2555:120:4"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:4",
														"type": ""
													}
												],
												"src": "2495:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:4"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:4"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:4"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:4"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:4",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:4"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:4"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:4"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:4"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:4"
															},
															"nodeType": "YulIf",
															"src": "2777:446:4"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:4",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:4",
														"type": ""
													}
												],
												"src": "2687:543:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:4"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:4"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:4",
														"type": ""
													}
												],
												"src": "3236:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:4",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:4"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:4"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:4"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:4"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:4"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:4",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:4",
														"type": ""
													}
												],
												"src": "3359:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:4"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:4"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:4",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:4"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:4"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:4",
														"type": ""
													}
												],
												"src": "3533:295:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:4"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:4"
															},
															"nodeType": "YulIf",
															"src": "4038:56:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:4"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:4"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:4"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:4"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:4"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:4"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:4",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:4",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:4"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:4"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:4"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:4"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:4"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:4"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:4",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:4"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:4"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:4",
																					"statements": []
																				},
																				"src": "4524:208:4"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:4",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:4"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:4",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:4"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:4"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:4",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:4"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:4"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:4"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:4"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:4",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:4"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:4"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:4"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:4"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:4"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:4"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:4",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:4",
														"type": ""
													}
												],
												"src": "3833:1395:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5262:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5279:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5282:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5272:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5272:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5376:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5379:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5369:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5400:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5403:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5393:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5393:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5393:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5234:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5471:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5481:34:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5506:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5509:5:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:13:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "5481:8:4"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5452:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "5462:8:4",
														"type": ""
													}
												],
												"src": "5420:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5601:775:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5611:15:4",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "5620:6:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5611:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5635:14:4",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "5644:5:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5635:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5693:677:4",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5781:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "5783:16:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5783:18:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5783:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5759:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "5769:3:4"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "5774:4:4"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "5765:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5765:14:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "5756:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5756:24:4"
																		},
																		"nodeType": "YulIf",
																		"src": "5753:50:4"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5848:419:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6228:25:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "6241:5:4"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "6248:4:4"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "6237:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6237:16:4"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6228:5:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5823:8:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5833:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5819:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5819:16:4"
																		},
																		"nodeType": "YulIf",
																		"src": "5816:451:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6280:23:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6292:4:4"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6298:4:4"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "6288:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6288:15:4"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "6280:4:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6316:44:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6351:8:4"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "6328:22:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6328:32:4"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "6316:8:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5669:8:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5679:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5666:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5666:15:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5682:2:4",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5662:3:4",
																"statements": []
															},
															"src": "5658:712:4"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "5556:6:4",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "5564:5:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5571:8:4",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "5581:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5589:5:4",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5596:4:4",
														"type": ""
													}
												],
												"src": "5528:848:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6442:1013:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6637:20:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6639:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6648:1:4",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6650:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6627:8:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6620:16:4"
															},
															"nodeType": "YulIf",
															"src": "6617:40:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6682:20:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6684:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6693:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6684:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6695:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6676:4:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:12:4"
															},
															"nodeType": "YulIf",
															"src": "6666:36:4"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6812:20:4",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "6814:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6823:1:4",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "6814:5:4"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "6825:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6805:27:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6810:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6856:176:4",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6891:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "6893:16:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6893:18:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6893:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "6876:8:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6886:3:4",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "6873:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6873:17:4"
																				},
																				"nodeType": "YulIf",
																				"src": "6870:43:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "6926:25:4",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6939:1:4",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "6942:8:4"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "6935:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6935:16:4"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "6926:5:4"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6982:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "6984:16:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6984:18:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6984:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6970:5:4"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "6977:3:4"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "6967:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6967:14:4"
																				},
																				"nodeType": "YulIf",
																				"src": "6964:40:4"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7017:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6841:191:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6846:1:4",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "6762:4:4"
															},
															"nodeType": "YulSwitch",
															"src": "6755:277:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7164:123:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7178:28:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7191:4:4"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7197:8:4"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "7187:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7187:19:4"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7178:5:4"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7237:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "7239:16:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7239:18:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7239:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "7225:5:4"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "7232:3:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "7222:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7222:14:4"
																		},
																		"nodeType": "YulIf",
																		"src": "7219:40:4"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7272:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7067:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7073:2:4",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7064:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7064:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7081:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7091:2:4",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7078:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7078:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7060:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7060:35:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7116:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7122:3:4",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7113:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7113:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7131:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7141:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7128:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7128:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7109:36:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7044:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:111:4"
															},
															"nodeType": "YulIf",
															"src": "7041:246:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7297:57:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7331:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7334:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7340:8:4"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "7350:3:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "7312:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7312:42:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7297:5:4"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7304:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7393:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7395:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7395:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7395:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7370:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "7381:3:4"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7377:14:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7367:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7367:25:4"
															},
															"nodeType": "YulIf",
															"src": "7364:51:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7424:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7437:5:4"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7444:4:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7433:16:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7424:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6412:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6418:8:4",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "6428:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6436:5:4",
														"type": ""
													}
												],
												"src": "6382:1073:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7527:219:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7537:31:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7563:4:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7545:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7545:23:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7537:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7577:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7607:8:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7589:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7589:27:4"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "7577:8:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7626:113:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7656:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7662:8:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7672:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "7635:20:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7635:104:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7626:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7502:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7508:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7521:5:4",
														"type": ""
													}
												],
												"src": "7461:285:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7800:362:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7810:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7833:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7815:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7815:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7810:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7844:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7867:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7849:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7844:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7878:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7901:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7904:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7897:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7897:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "7882:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7915:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "7944:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7926:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7926:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7915:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8133:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8135:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8135:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8135:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8066:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8059:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8059:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "8089:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "8096:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "8105:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "8092:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8092:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "8086:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8086:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "8039:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8039:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8019:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8019:113:4"
															},
															"nodeType": "YulIf",
															"src": "8016:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7783:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7786:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7792:7:4",
														"type": ""
													}
												],
												"src": "7752:410:4"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040518060400160405280600e81526020017f77656233436c756273546f6b656e000000000000000000000000000000000000815250600190816200004a919062000481565b506040518060400160405280600381526020017f57435400000000000000000000000000000000000000000000000000000000008152506002908162000091919062000481565b506012600355600354600a620000a89190620006eb565b600455600454620f4240620000be91906200073c565b600555348015620000ce57600080fd5b50620000ef620000e36200013b60201b60201c565b6200014360201b60201c565b600554600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062000787565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200028957607f821691505b6020821081036200029f576200029e62000241565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003097fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002ca565b620003158683620002ca565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003626200035c62000356846200032d565b62000337565b6200032d565b9050919050565b6000819050919050565b6200037e8362000341565b620003966200038d8262000369565b848454620002d7565b825550505050565b600090565b620003ad6200039e565b620003ba81848462000373565b505050565b5b81811015620003e257620003d6600082620003a3565b600181019050620003c0565b5050565b601f8211156200043157620003fb81620002a5565b6200040684620002ba565b8101602085101562000416578190505b6200042e6200042585620002ba565b830182620003bf565b50505b505050565b600082821c905092915050565b6000620004566000198460080262000436565b1980831691505092915050565b600062000471838362000443565b9150826002028217905092915050565b6200048c8262000207565b67ffffffffffffffff811115620004a857620004a762000212565b5b620004b4825462000270565b620004c1828285620003e6565b600060209050601f831160018114620004f95760008415620004e4578287015190505b620004f0858262000463565b86555062000560565b601f1984166200050986620002a5565b60005b8281101562000533578489015182556001820191506020850194506020810190506200050c565b868310156200055357848901516200054f601f89168262000443565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115620005f657808604811115620005ce57620005cd62000568565b5b6001851615620005de5780820291505b8081029050620005ee8562000597565b9450620005ae565b94509492505050565b600082620006115760019050620006e4565b81620006215760009050620006e4565b81600181146200063a576002811462000645576200067b565b6001915050620006e4565b60ff8411156200065a576200065962000568565b5b8360020a91508482111562000674576200067362000568565b5b50620006e4565b5060208310610133831016604e8410600b8410161715620006b55782820a905083811115620006af57620006ae62000568565b5b620006e4565b620006c48484846001620005a4565b92509050818404811115620006de57620006dd62000568565b5b81810290505b9392505050565b6000620006f8826200032d565b915062000705836200032d565b9250620007347fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620005ff565b905092915050565b600062000749826200032d565b915062000756836200032d565b925082820262000766816200032d565b9150828204841483151762000780576200077f62000568565b5b5092915050565b610fc980620007976000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610229578063a9059cbb14610247578063dd62ed3e14610277578063f2fde38b146102a7576100ea565b806370a08231146101d1578063715018a6146102015780638da5cb5b1461020b576100ea565b806323b872dd116100c857806323b872dd14610147578063313ce567146101775780636c02a931146101955780636d6a6a4d146101b3576100ea565b8063095ea7b3146100ef57806318160ddd1461011f5780632004ffd91461013d575b600080fd5b61010960048036038101906101049190610b62565b6102c3565b6040516101169190610bbd565b60405180910390f35b6101276103b1565b6040516101349190610be7565b60405180910390f35b6101456103b7565b005b610161600480360381019061015c9190610c02565b6103c1565b60405161016e9190610bbd565b60405180910390f35b61017f6105f1565b60405161018c9190610be7565b60405180910390f35b61019d6105f7565b6040516101aa9190610ce5565b60405180910390f35b6101bb610685565b6040516101c89190610be7565b60405180910390f35b6101eb60048036038101906101e69190610d07565b61068b565b6040516101f89190610be7565b60405180910390f35b6102096106a3565b005b6102136106b7565b6040516102209190610d43565b60405180910390f35b6102316106e0565b60405161023e9190610ce5565b60405180910390f35b610261600480360381019061025c9190610b62565b61076e565b60405161026e9190610bbd565b60405180910390f35b610291600480360381019061028c9190610d5e565b6108d7565b60405161029e9190610be7565b60405180910390f35b6102c160048036038101906102bc9190610d07565b6108fc565b005b600081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103a39190610be7565b60405180910390a392915050565b60055481565b6103bf61097f565b565b6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561040f57600080fd5b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561049857600080fd5b81600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104e79190610dcd565b9250508190555081600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461057a9190610e01565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105de9190610be7565b60405180910390a3600190509392505050565b60035481565b6001805461060490610e64565b80601f016020809104026020016040519081016040528092919081815260200182805461063090610e64565b801561067d5780601f106106525761010080835404028352916020019161067d565b820191906000526020600020905b81548152906001019060200180831161066057829003601f168201915b505050505081565b60045481565b60066020528060005260406000206000915090505481565b6106ab61097f565b6106b560006109fd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600280546106ed90610e64565b80601f016020809104026020016040519081016040528092919081815260200182805461071990610e64565b80156107665780601f1061073b57610100808354040283529160200191610766565b820191906000526020600020905b81548152906001019060200180831161074957829003601f168201915b505050505081565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156107bc57600080fd5b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461080b9190610e01565b9250508190555081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108619190610dcd565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108c59190610be7565b60405180910390a36001905092915050565b6007602052816000526040600020602052806000526040600020600091509150505481565b61090461097f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610973576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096a90610f07565b60405180910390fd5b61097c816109fd565b50565b610987610ac1565b73ffffffffffffffffffffffffffffffffffffffff166109a56106b7565b73ffffffffffffffffffffffffffffffffffffffff16146109fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f290610f73565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610af982610ace565b9050919050565b610b0981610aee565b8114610b1457600080fd5b50565b600081359050610b2681610b00565b92915050565b6000819050919050565b610b3f81610b2c565b8114610b4a57600080fd5b50565b600081359050610b5c81610b36565b92915050565b60008060408385031215610b7957610b78610ac9565b5b6000610b8785828601610b17565b9250506020610b9885828601610b4d565b9150509250929050565b60008115159050919050565b610bb781610ba2565b82525050565b6000602082019050610bd26000830184610bae565b92915050565b610be181610b2c565b82525050565b6000602082019050610bfc6000830184610bd8565b92915050565b600080600060608486031215610c1b57610c1a610ac9565b5b6000610c2986828701610b17565b9350506020610c3a86828701610b17565b9250506040610c4b86828701610b4d565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c8f578082015181840152602081019050610c74565b60008484015250505050565b6000601f19601f8301169050919050565b6000610cb782610c55565b610cc18185610c60565b9350610cd1818560208601610c71565b610cda81610c9b565b840191505092915050565b60006020820190508181036000830152610cff8184610cac565b905092915050565b600060208284031215610d1d57610d1c610ac9565b5b6000610d2b84828501610b17565b91505092915050565b610d3d81610aee565b82525050565b6000602082019050610d586000830184610d34565b92915050565b60008060408385031215610d7557610d74610ac9565b5b6000610d8385828601610b17565b9250506020610d9485828601610b17565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dd882610b2c565b9150610de383610b2c565b9250828201905080821115610dfb57610dfa610d9e565b5b92915050565b6000610e0c82610b2c565b9150610e1783610b2c565b9250828203905081811115610e2f57610e2e610d9e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e7c57607f821691505b602082108103610e8f57610e8e610e35565b5b50919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610ef1602683610c60565b9150610efc82610e95565b604082019050919050565b60006020820190508181036000830152610f2081610ee4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610f5d602083610c60565b9150610f6882610f27565b602082019050919050565b60006020820190508181036000830152610f8c81610f50565b905091905056fea2646970667358221220985efeb1f155be530bf918ee752e6eaba719d4ea5984b2039b4be32c7f65cb2264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x77656233436C756273546F6B656E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x481 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5743540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP2 PUSH3 0x91 SWAP2 SWAP1 PUSH3 0x481 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x3 SSTORE PUSH1 0x3 SLOAD PUSH1 0xA PUSH3 0xA8 SWAP2 SWAP1 PUSH3 0x6EB JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x4 SLOAD PUSH3 0xF4240 PUSH3 0xBE SWAP2 SWAP1 PUSH3 0x73C JUMP JUMPDEST PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xEF PUSH3 0xE3 PUSH3 0x13B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x143 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH3 0x787 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x289 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x29F JUMPI PUSH3 0x29E PUSH3 0x241 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x309 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2CA JUMP JUMPDEST PUSH3 0x315 DUP7 DUP4 PUSH3 0x2CA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x362 PUSH3 0x35C PUSH3 0x356 DUP5 PUSH3 0x32D JUMP JUMPDEST PUSH3 0x337 JUMP JUMPDEST PUSH3 0x32D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x37E DUP4 PUSH3 0x341 JUMP JUMPDEST PUSH3 0x396 PUSH3 0x38D DUP3 PUSH3 0x369 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2D7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3AD PUSH3 0x39E JUMP JUMPDEST PUSH3 0x3BA DUP2 DUP5 DUP5 PUSH3 0x373 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3E2 JUMPI PUSH3 0x3D6 PUSH1 0x0 DUP3 PUSH3 0x3A3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x431 JUMPI PUSH3 0x3FB DUP2 PUSH3 0x2A5 JUMP JUMPDEST PUSH3 0x406 DUP5 PUSH3 0x2BA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x416 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x42E PUSH3 0x425 DUP6 PUSH3 0x2BA JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3BF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x456 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x436 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x471 DUP4 DUP4 PUSH3 0x443 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x48C DUP3 PUSH3 0x207 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4A8 JUMPI PUSH3 0x4A7 PUSH3 0x212 JUMP JUMPDEST JUMPDEST PUSH3 0x4B4 DUP3 SLOAD PUSH3 0x270 JUMP JUMPDEST PUSH3 0x4C1 DUP3 DUP3 DUP6 PUSH3 0x3E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4F9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4E4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4F0 DUP6 DUP3 PUSH3 0x463 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x560 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x509 DUP7 PUSH3 0x2A5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x533 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x50C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x553 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x54F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x443 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x5F6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x5CE JUMPI PUSH3 0x5CD PUSH3 0x568 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x5DE JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x5EE DUP6 PUSH3 0x597 JUMP JUMPDEST SWAP5 POP PUSH3 0x5AE JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x611 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x6E4 JUMP JUMPDEST DUP2 PUSH3 0x621 JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0x6E4 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x63A JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x645 JUMPI PUSH3 0x67B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x6E4 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x65A JUMPI PUSH3 0x659 PUSH3 0x568 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x674 JUMPI PUSH3 0x673 PUSH3 0x568 JUMP JUMPDEST JUMPDEST POP PUSH3 0x6E4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x6B5 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x6AF JUMPI PUSH3 0x6AE PUSH3 0x568 JUMP JUMPDEST JUMPDEST PUSH3 0x6E4 JUMP JUMPDEST PUSH3 0x6C4 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x5A4 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x6DE JUMPI PUSH3 0x6DD PUSH3 0x568 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6F8 DUP3 PUSH3 0x32D JUMP JUMPDEST SWAP2 POP PUSH3 0x705 DUP4 PUSH3 0x32D JUMP JUMPDEST SWAP3 POP PUSH3 0x734 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x5FF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x749 DUP3 PUSH3 0x32D JUMP JUMPDEST SWAP2 POP PUSH3 0x756 DUP4 PUSH3 0x32D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x766 DUP2 PUSH3 0x32D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x780 JUMPI PUSH3 0x77F PUSH3 0x568 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFC9 DUP1 PUSH3 0x797 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A7 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20B JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x6D6A6A4D EQ PUSH2 0x1B3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x2004FFD9 EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0x6A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x8FC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x97F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x604 SWAP1 PUSH2 0xE64 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x630 SWAP1 PUSH2 0xE64 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x652 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x660 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6AB PUSH2 0x97F JUMP JUMPDEST PUSH2 0x6B5 PUSH1 0x0 PUSH2 0x9FD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x6ED SWAP1 PUSH2 0xE64 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x719 SWAP1 PUSH2 0xE64 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x766 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x766 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x749 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x80B SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x861 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x8C5 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x904 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x973 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96A SWAP1 PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97C DUP2 PUSH2 0x9FD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x987 PUSH2 0xAC1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9A5 PUSH2 0x6B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F2 SWAP1 PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF9 DUP3 PUSH2 0xACE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB09 DUP2 PUSH2 0xAEE JUMP JUMPDEST DUP2 EQ PUSH2 0xB14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB26 DUP2 PUSH2 0xB00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3F DUP2 PUSH2 0xB2C JUMP JUMPDEST DUP2 EQ PUSH2 0xB4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5C DUP2 PUSH2 0xB36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB79 JUMPI PUSH2 0xB78 PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB87 DUP6 DUP3 DUP7 ADD PUSH2 0xB17 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB98 DUP6 DUP3 DUP7 ADD PUSH2 0xB4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB7 DUP2 PUSH2 0xBA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE1 DUP2 PUSH2 0xB2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1B JUMPI PUSH2 0xC1A PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC29 DUP7 DUP3 DUP8 ADD PUSH2 0xB17 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC3A DUP7 DUP3 DUP8 ADD PUSH2 0xB17 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC4B DUP7 DUP3 DUP8 ADD PUSH2 0xB4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC8F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB7 DUP3 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0xCC1 DUP2 DUP6 PUSH2 0xC60 JUMP JUMPDEST SWAP4 POP PUSH2 0xCD1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC71 JUMP JUMPDEST PUSH2 0xCDA DUP2 PUSH2 0xC9B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCFF DUP2 DUP5 PUSH2 0xCAC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1C PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2B DUP5 DUP3 DUP6 ADD PUSH2 0xB17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD3D DUP2 PUSH2 0xAEE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD58 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH2 0xD74 PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD83 DUP6 DUP3 DUP7 ADD PUSH2 0xB17 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD94 DUP6 DUP3 DUP7 ADD PUSH2 0xB17 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDD8 DUP3 PUSH2 0xB2C JUMP JUMPDEST SWAP2 POP PUSH2 0xDE3 DUP4 PUSH2 0xB2C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDFB JUMPI PUSH2 0xDFA PUSH2 0xD9E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0C DUP3 PUSH2 0xB2C JUMP JUMPDEST SWAP2 POP PUSH2 0xE17 DUP4 PUSH2 0xB2C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE2F JUMPI PUSH2 0xE2E PUSH2 0xD9E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE7C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE8F JUMPI PUSH2 0xE8E PUSH2 0xE35 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF1 PUSH1 0x26 DUP4 PUSH2 0xC60 JUMP JUMPDEST SWAP2 POP PUSH2 0xEFC DUP3 PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF20 DUP2 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5D PUSH1 0x20 DUP4 PUSH2 0xC60 JUMP JUMPDEST SWAP2 POP PUSH2 0xF68 DUP3 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF8C DUP2 PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0x5E INVALID 0xB1 CALL SSTORE 0xBE MSTORE8 SIGNEXTEND 0xF9 XOR 0xEE PUSH22 0x2E6EABA719D4EA5984B2039B4BE32C7F65CB2264736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "182:1905:3:-:0;;;276:42;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;324:28;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;381:2;358:25;;478:8;;464:2;:23;;;;:::i;:::-;436:51;;549:13;;539:7;:23;;;;:::i;:::-;513:49;;948:64;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;994:11:3;;970:9;:21;980:10;970:21;;;;;;;;;;;;;;;:35;;;;182:1905;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:99:4:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:180::-;5282:77;5279:1;5272:88;5379:4;5376:1;5369:15;5403:4;5400:1;5393:15;5420:102;5462:8;5509:5;5506:1;5502:13;5481:34;;5420:102;;;:::o;5528:848::-;5589:5;5596:4;5620:6;5611:15;;5644:5;5635:14;;5658:712;5679:1;5669:8;5666:15;5658:712;;;5774:4;5769:3;5765:14;5759:4;5756:24;5753:50;;;5783:18;;:::i;:::-;5753:50;5833:1;5823:8;5819:16;5816:451;;;6248:4;6241:5;6237:16;6228:25;;5816:451;6298:4;6292;6288:15;6280:23;;6328:32;6351:8;6328:32;:::i;:::-;6316:44;;5658:712;;;5528:848;;;;;;;:::o;6382:1073::-;6436:5;6627:8;6617:40;;6648:1;6639:10;;6650:5;;6617:40;6676:4;6666:36;;6693:1;6684:10;;6695:5;;6666:36;6762:4;6810:1;6805:27;;;;6846:1;6841:191;;;;6755:277;;6805:27;6823:1;6814:10;;6825:5;;;6841:191;6886:3;6876:8;6873:17;6870:43;;;6893:18;;:::i;:::-;6870:43;6942:8;6939:1;6935:16;6926:25;;6977:3;6970:5;6967:14;6964:40;;;6984:18;;:::i;:::-;6964:40;7017:5;;;6755:277;;7141:2;7131:8;7128:16;7122:3;7116:4;7113:13;7109:36;7091:2;7081:8;7078:16;7073:2;7067:4;7064:12;7060:35;7044:111;7041:246;;;7197:8;7191:4;7187:19;7178:28;;7232:3;7225:5;7222:14;7219:40;;;7239:18;;:::i;:::-;7219:40;7272:5;;7041:246;7312:42;7350:3;7340:8;7334:4;7331:1;7312:42;:::i;:::-;7297:57;;;;7386:4;7381:3;7377:14;7370:5;7367:25;7364:51;;;7395:18;;:::i;:::-;7364:51;7444:4;7437:5;7433:16;7424:25;;6382:1073;;;;;;:::o;7461:285::-;7521:5;7545:23;7563:4;7545:23;:::i;:::-;7537:31;;7589:27;7607:8;7589:27;:::i;:::-;7577:39;;7635:104;7672:66;7662:8;7656:4;7635:104;:::i;:::-;7626:113;;7461:285;;;;:::o;7752:410::-;7792:7;7815:20;7833:1;7815:20;:::i;:::-;7810:25;;7849:20;7867:1;7849:20;:::i;:::-;7844:25;;7904:1;7901;7897:9;7926:30;7944:11;7926:30;:::i;:::-;7915:41;;8105:1;8096:7;8092:15;8089:1;8086:22;8066:1;8059:9;8039:83;8016:139;;8135:18;;:::i;:::-;8016:139;7800:362;7752:410;;;;:::o;182:1905:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 2431,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 2753,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2557,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_503": {
									"entryPoint": 2263,
									"id": 503,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_583": {
									"entryPoint": 707,
									"id": 583,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_497": {
									"entryPoint": 1675,
									"id": 497,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimalFactor_472": {
									"entryPoint": 1669,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_464": {
									"entryPoint": 1521,
									"id": 464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintToken_643": {
									"entryPoint": 951,
									"id": 643,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 1719,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1699,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_461": {
									"entryPoint": 1760,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenName_458": {
									"entryPoint": 1527,
									"id": 458,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_477": {
									"entryPoint": 945,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_637": {
									"entryPoint": 961,
									"id": 637,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 2300,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_555": {
									"entryPoint": 1902,
									"id": 555,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3185,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3486,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 3733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8695:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:4",
														"type": ""
													}
												],
												"src": "841:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:4"
															},
															"nodeType": "YulIf",
															"src": "977:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:4",
														"type": ""
													}
												],
												"src": "924:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:4",
														"type": ""
													}
												],
												"src": "1052:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:4"
															},
															"nodeType": "YulIf",
															"src": "1290:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:4",
														"type": ""
													}
												],
												"src": "1197:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1729:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1754:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1747:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1747:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1740:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1729:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1701:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1711:7:4",
														"type": ""
													}
												],
												"src": "1677:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1832:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1849:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1854:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1854:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1842:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1842:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1820:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1827:3:4",
														"type": ""
													}
												],
												"src": "1773:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1980:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1990:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2002:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2013:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1998:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1990:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2064:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2077:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2088:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2073:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2073:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2026:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2026:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2026:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1952:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1964:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1975:4:4",
														"type": ""
													}
												],
												"src": "1888:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2169:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2186:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2209:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2191:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2191:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2179:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2179:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2157:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2164:3:4",
														"type": ""
													}
												],
												"src": "2104:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2326:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2336:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2348:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2359:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2344:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2344:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2336:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2416:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2429:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2440:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2425:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2425:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2372:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2372:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2372:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2298:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2310:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2321:4:4",
														"type": ""
													}
												],
												"src": "2228:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2556:519:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2602:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2604:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2604:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2604:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2577:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2586:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2573:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2598:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2569:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2569:32:4"
															},
															"nodeType": "YulIf",
															"src": "2566:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2695:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2710:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2724:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2714:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2739:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2774:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2785:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2770:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2770:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2794:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2749:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2749:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2739:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2822:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2837:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2851:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2841:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2867:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2902:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2913:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2898:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2898:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2922:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2877:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2877:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2867:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2950:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2965:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2979:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2969:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2995:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3030:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3041:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3026:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3026:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3050:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3005:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3005:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2995:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2510:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2521:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2533:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2541:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2549:6:4",
														"type": ""
													}
												],
												"src": "2456:619:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3140:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3151:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3167:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3161:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3161:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3151:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3123:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3133:6:4",
														"type": ""
													}
												],
												"src": "3081:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3299:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3304:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3320:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3339:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3344:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3335:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3335:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3320:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3254:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3259:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3270:11:4",
														"type": ""
													}
												],
												"src": "3186:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3423:184:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3433:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3442:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3437:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3502:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3527:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3532:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3523:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3523:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3546:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3551:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3542:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3542:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3536:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3536:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3516:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3516:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3516:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3463:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3466:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3460:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3460:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3474:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3476:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3485:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3488:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3481:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3481:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3476:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3456:3:4",
																"statements": []
															},
															"src": "3452:113:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3585:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3590:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3581:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3581:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3599:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3574:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3574:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3574:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3405:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3410:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3415:6:4",
														"type": ""
													}
												],
												"src": "3361:246:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3661:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3671:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3689:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3696:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3685:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3685:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3705:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3701:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3701:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3681:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3681:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3671:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3644:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3654:6:4",
														"type": ""
													}
												],
												"src": "3613:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3813:285:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3823:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3870:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3837:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3837:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3827:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3885:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3951:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3956:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3892:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3892:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3885:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4011:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4018:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4007:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4007:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4025:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4030:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3972:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3972:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3972:65:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4046:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4057:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4084:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4062:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4062:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4053:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4046:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3794:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3801:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3809:3:4",
														"type": ""
													}
												],
												"src": "3721:377:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4222:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4232:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4244:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4255:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4240:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4232:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4279:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4290:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4275:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4275:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4298:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4304:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4294:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4294:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4268:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4268:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4268:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4324:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4396:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4405:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4332:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4332:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4324:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4194:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4206:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4217:4:4",
														"type": ""
													}
												],
												"src": "4104:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4489:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4535:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4537:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4537:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4537:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4510:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4519:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4506:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4506:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4531:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4502:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4502:32:4"
															},
															"nodeType": "YulIf",
															"src": "4499:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "4628:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4643:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4657:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4647:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4672:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4707:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4718:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4703:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4703:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4727:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4682:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4682:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4672:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4459:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4470:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4482:6:4",
														"type": ""
													}
												],
												"src": "4423:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4823:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4840:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4863:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4845:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4845:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4833:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4833:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4833:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4811:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4818:3:4",
														"type": ""
													}
												],
												"src": "4758:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4980:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4990:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5002:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5013:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4998:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4998:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4990:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5070:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5083:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5094:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5079:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5079:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5026:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5026:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5026:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4952:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4964:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4975:4:4",
														"type": ""
													}
												],
												"src": "4882:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5193:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5239:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5241:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5241:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5241:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5214:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5210:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5210:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5235:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5206:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5206:32:4"
															},
															"nodeType": "YulIf",
															"src": "5203:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "5332:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5347:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5361:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5351:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5376:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5411:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5422:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5407:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5407:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5431:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5386:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5386:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5376:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5459:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5474:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5488:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5478:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5504:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5539:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5550:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5535:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5535:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5559:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5514:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5514:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5504:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5155:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5166:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5178:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5186:6:4",
														"type": ""
													}
												],
												"src": "5110:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5618:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5635:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5638:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5628:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5628:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5628:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5732:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5735:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5725:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5725:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5725:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5756:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5759:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5749:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5749:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5749:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5590:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5820:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5830:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5853:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5835:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5835:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5830:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5864:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5887:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5869:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5869:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5864:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5898:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5909:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5912:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5905:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5898:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5938:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5940:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5940:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5940:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5930:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5933:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5927:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5927:10:4"
															},
															"nodeType": "YulIf",
															"src": "5924:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5807:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5810:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5816:3:4",
														"type": ""
													}
												],
												"src": "5776:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6018:149:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6028:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6051:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6033:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6033:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6028:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6062:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6085:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6067:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6067:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6062:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6096:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6108:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6111:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6104:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6104:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6096:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6138:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6140:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6140:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6129:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6135:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6126:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6126:11:4"
															},
															"nodeType": "YulIf",
															"src": "6123:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6004:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6007:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6013:4:4",
														"type": ""
													}
												],
												"src": "5973:194:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6201:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6218:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6221:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6211:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6211:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6211:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6315:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6318:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6308:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6308:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6308:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6339:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6342:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6332:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6332:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6332:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6173:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6410:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6420:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6434:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6440:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6430:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6430:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6420:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6451:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6481:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6487:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6477:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6477:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6455:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6528:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6542:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6556:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6564:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6552:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6552:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6542:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6508:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6501:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6501:26:4"
															},
															"nodeType": "YulIf",
															"src": "6498:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6631:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6645:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6645:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6645:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6595:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6618:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6626:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6615:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6615:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6592:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6592:38:4"
															},
															"nodeType": "YulIf",
															"src": "6589:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6394:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6403:6:4",
														"type": ""
													}
												],
												"src": "6359:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6791:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6813:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6821:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6809:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6809:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6825:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6802:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6802:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6802:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6881:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6889:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6877:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6877:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6894:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6870:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6870:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6870:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6783:6:4",
														"type": ""
													}
												],
												"src": "6685:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7062:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7072:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7138:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7143:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7079:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7079:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7072:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7244:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "7155:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7155:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7155:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7257:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7268:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7273:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7264:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7264:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7257:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7050:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7058:3:4",
														"type": ""
													}
												],
												"src": "6916:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7459:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7469:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7481:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7492:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7477:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7477:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7469:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7516:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7527:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7512:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7512:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7535:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7541:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7531:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7505:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7505:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7561:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7695:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7569:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7569:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7561:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7439:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7454:4:4",
														"type": ""
													}
												],
												"src": "7288:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7819:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7841:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7849:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7837:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7837:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7853:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7830:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7830:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7830:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7811:6:4",
														"type": ""
													}
												],
												"src": "7713:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8047:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8057:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8123:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8128:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8064:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8064:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8057:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8229:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "8140:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8140:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8140:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8242:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8253:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8258:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8249:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8249:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8242:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8035:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8043:3:4",
														"type": ""
													}
												],
												"src": "7901:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8444:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8454:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8466:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8477:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8462:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8462:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8454:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8501:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8512:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8497:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8497:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8520:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8526:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8516:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8516:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8490:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8490:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8490:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8546:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8680:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8554:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8554:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8546:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8424:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8439:4:4",
														"type": ""
													}
												],
												"src": "8273:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A7 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20B JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x6D6A6A4D EQ PUSH2 0x1B3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x2004FFD9 EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0x6A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x8FC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x97F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x604 SWAP1 PUSH2 0xE64 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x630 SWAP1 PUSH2 0xE64 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x652 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x660 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6AB PUSH2 0x97F JUMP JUMPDEST PUSH2 0x6B5 PUSH1 0x0 PUSH2 0x9FD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x6ED SWAP1 PUSH2 0xE64 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x719 SWAP1 PUSH2 0xE64 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x766 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x766 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x749 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x80B SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x861 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x8C5 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x904 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x973 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96A SWAP1 PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97C DUP2 PUSH2 0x9FD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x987 PUSH2 0xAC1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9A5 PUSH2 0x6B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F2 SWAP1 PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF9 DUP3 PUSH2 0xACE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB09 DUP2 PUSH2 0xAEE JUMP JUMPDEST DUP2 EQ PUSH2 0xB14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB26 DUP2 PUSH2 0xB00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3F DUP2 PUSH2 0xB2C JUMP JUMPDEST DUP2 EQ PUSH2 0xB4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5C DUP2 PUSH2 0xB36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB79 JUMPI PUSH2 0xB78 PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB87 DUP6 DUP3 DUP7 ADD PUSH2 0xB17 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB98 DUP6 DUP3 DUP7 ADD PUSH2 0xB4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB7 DUP2 PUSH2 0xBA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE1 DUP2 PUSH2 0xB2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1B JUMPI PUSH2 0xC1A PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC29 DUP7 DUP3 DUP8 ADD PUSH2 0xB17 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC3A DUP7 DUP3 DUP8 ADD PUSH2 0xB17 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC4B DUP7 DUP3 DUP8 ADD PUSH2 0xB4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC8F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB7 DUP3 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0xCC1 DUP2 DUP6 PUSH2 0xC60 JUMP JUMPDEST SWAP4 POP PUSH2 0xCD1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC71 JUMP JUMPDEST PUSH2 0xCDA DUP2 PUSH2 0xC9B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCFF DUP2 DUP5 PUSH2 0xCAC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1C PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2B DUP5 DUP3 DUP6 ADD PUSH2 0xB17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD3D DUP2 PUSH2 0xAEE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD58 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH2 0xD74 PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD83 DUP6 DUP3 DUP7 ADD PUSH2 0xB17 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD94 DUP6 DUP3 DUP7 ADD PUSH2 0xB17 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDD8 DUP3 PUSH2 0xB2C JUMP JUMPDEST SWAP2 POP PUSH2 0xDE3 DUP4 PUSH2 0xB2C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDFB JUMPI PUSH2 0xDFA PUSH2 0xD9E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0C DUP3 PUSH2 0xB2C JUMP JUMPDEST SWAP2 POP PUSH2 0xE17 DUP4 PUSH2 0xB2C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE2F JUMPI PUSH2 0xE2E PUSH2 0xD9E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE7C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE8F JUMPI PUSH2 0xE8E PUSH2 0xE35 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF1 PUSH1 0x26 DUP4 PUSH2 0xC60 JUMP JUMPDEST SWAP2 POP PUSH2 0xEFC DUP3 PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF20 DUP2 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5D PUSH1 0x20 DUP4 PUSH2 0xC60 JUMP JUMPDEST SWAP2 POP PUSH2 0xF68 DUP3 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF8C DUP2 PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0x5E INVALID 0xB1 CALL SSTORE 0xBE MSTORE8 SIGNEXTEND 0xF9 XOR 0xEE PUSH22 0x2E6EABA719D4EA5984B2039B4BE32C7F65CB2264736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "182:1905:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1366:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;513:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2024:52;;;:::i;:::-;;1626:354;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;358:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;276:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;436:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;827:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;324:28:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1081:279;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;877:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1366:206:3;1430:12;1486:6;1452:9;:21;1462:10;1452:21;;;;;;;;;;;;;;;:31;1474:8;1452:31;;;;;;;;;;;;;;;:40;;;;1526:8;1505:38;;1514:10;1505:38;;;1536:6;1505:38;;;;;;:::i;:::-;;;;;;;;1366:206;;;;:::o;513:49::-;;;;:::o;2024:52::-;1094:13:0;:11;:13::i;:::-;2024:52:3:o;1626:354::-;1708:12;1750:9;:16;1760:5;1750:16;;;;;;;;;;;;;;;;1740:6;:26;;1732:35;;;;;;1795:9;:16;1805:5;1795:16;;;;;;;;;;;;;;;:28;1812:10;1795:28;;;;;;;;;;;;;;;;1785:6;:38;;1777:47;;;;;;1852:6;1834:9;:14;1844:3;1834:14;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;1900:6;1868:9;:16;1878:5;1868:16;;;;;;;;;;;;;;;:28;1885:10;1868:28;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;1937:3;1921:28;;1930:5;1921:28;;;1942:6;1921:28;;;;;;:::i;:::-;;;;;;;;1966:4;1959:11;;1626:354;;;;;:::o;358:25::-;;;;:::o;276:42::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;436:51::-;;;;:::o;827:44::-;;;;;;;;;;;;;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;324:28:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1081:279::-;1145:12;1202:6;1177:9;:21;1187:10;1177:21;;;;;;;;;;;;;;;;:31;;1169:40;;;;;;1244:6;1219:9;:21;1229:10;1219:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;1278:6;1260:9;:14;1270:3;1260:14;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;1320:3;1299:33;;1308:10;1299:33;;;1325:6;1299:33;;;;;;:::i;:::-;;;;;;;;1349:4;1342:11;;1081:279;;;;:::o;877:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:118::-;2191:24;2209:5;2191:24;:::i;:::-;2186:3;2179:37;2104:118;;:::o;2228:222::-;2321:4;2359:2;2348:9;2344:18;2336:26;;2372:71;2440:1;2429:9;2425:17;2416:6;2372:71;:::i;:::-;2228:222;;;;:::o;2456:619::-;2533:6;2541;2549;2598:2;2586:9;2577:7;2573:23;2569:32;2566:119;;;2604:79;;:::i;:::-;2566:119;2724:1;2749:53;2794:7;2785:6;2774:9;2770:22;2749:53;:::i;:::-;2739:63;;2695:117;2851:2;2877:53;2922:7;2913:6;2902:9;2898:22;2877:53;:::i;:::-;2867:63;;2822:118;2979:2;3005:53;3050:7;3041:6;3030:9;3026:22;3005:53;:::i;:::-;2995:63;;2950:118;2456:619;;;;;:::o;3081:99::-;3133:6;3167:5;3161:12;3151:22;;3081:99;;;:::o;3186:169::-;3270:11;3304:6;3299:3;3292:19;3344:4;3339:3;3335:14;3320:29;;3186:169;;;;:::o;3361:246::-;3442:1;3452:113;3466:6;3463:1;3460:13;3452:113;;;3551:1;3546:3;3542:11;3536:18;3532:1;3527:3;3523:11;3516:39;3488:2;3485:1;3481:10;3476:15;;3452:113;;;3599:1;3590:6;3585:3;3581:16;3574:27;3423:184;3361:246;;;:::o;3613:102::-;3654:6;3705:2;3701:7;3696:2;3689:5;3685:14;3681:28;3671:38;;3613:102;;;:::o;3721:377::-;3809:3;3837:39;3870:5;3837:39;:::i;:::-;3892:71;3956:6;3951:3;3892:71;:::i;:::-;3885:78;;3972:65;4030:6;4025:3;4018:4;4011:5;4007:16;3972:65;:::i;:::-;4062:29;4084:6;4062:29;:::i;:::-;4057:3;4053:39;4046:46;;3813:285;3721:377;;;;:::o;4104:313::-;4217:4;4255:2;4244:9;4240:18;4232:26;;4304:9;4298:4;4294:20;4290:1;4279:9;4275:17;4268:47;4332:78;4405:4;4396:6;4332:78;:::i;:::-;4324:86;;4104:313;;;;:::o;4423:329::-;4482:6;4531:2;4519:9;4510:7;4506:23;4502:32;4499:119;;;4537:79;;:::i;:::-;4499:119;4657:1;4682:53;4727:7;4718:6;4707:9;4703:22;4682:53;:::i;:::-;4672:63;;4628:117;4423:329;;;;:::o;4758:118::-;4845:24;4863:5;4845:24;:::i;:::-;4840:3;4833:37;4758:118;;:::o;4882:222::-;4975:4;5013:2;5002:9;4998:18;4990:26;;5026:71;5094:1;5083:9;5079:17;5070:6;5026:71;:::i;:::-;4882:222;;;;:::o;5110:474::-;5178:6;5186;5235:2;5223:9;5214:7;5210:23;5206:32;5203:119;;;5241:79;;:::i;:::-;5203:119;5361:1;5386:53;5431:7;5422:6;5411:9;5407:22;5386:53;:::i;:::-;5376:63;;5332:117;5488:2;5514:53;5559:7;5550:6;5539:9;5535:22;5514:53;:::i;:::-;5504:63;;5459:118;5110:474;;;;;:::o;5590:180::-;5638:77;5635:1;5628:88;5735:4;5732:1;5725:15;5759:4;5756:1;5749:15;5776:191;5816:3;5835:20;5853:1;5835:20;:::i;:::-;5830:25;;5869:20;5887:1;5869:20;:::i;:::-;5864:25;;5912:1;5909;5905:9;5898:16;;5933:3;5930:1;5927:10;5924:36;;;5940:18;;:::i;:::-;5924:36;5776:191;;;;:::o;5973:194::-;6013:4;6033:20;6051:1;6033:20;:::i;:::-;6028:25;;6067:20;6085:1;6067:20;:::i;:::-;6062:25;;6111:1;6108;6104:9;6096:17;;6135:1;6129:4;6126:11;6123:37;;;6140:18;;:::i;:::-;6123:37;5973:194;;;;:::o;6173:180::-;6221:77;6218:1;6211:88;6318:4;6315:1;6308:15;6342:4;6339:1;6332:15;6359:320;6403:6;6440:1;6434:4;6430:12;6420:22;;6487:1;6481:4;6477:12;6508:18;6498:81;;6564:4;6556:6;6552:17;6542:27;;6498:81;6626:2;6618:6;6615:14;6595:18;6592:38;6589:84;;6645:18;;:::i;:::-;6589:84;6410:269;6359:320;;;:::o;6685:225::-;6825:34;6821:1;6813:6;6809:14;6802:58;6894:8;6889:2;6881:6;6877:15;6870:33;6685:225;:::o;6916:366::-;7058:3;7079:67;7143:2;7138:3;7079:67;:::i;:::-;7072:74;;7155:93;7244:3;7155:93;:::i;:::-;7273:2;7268:3;7264:12;7257:19;;6916:366;;;:::o;7288:419::-;7454:4;7492:2;7481:9;7477:18;7469:26;;7541:9;7535:4;7531:20;7527:1;7516:9;7512:17;7505:47;7569:131;7695:4;7569:131;:::i;:::-;7561:139;;7288:419;;;:::o;7713:182::-;7853:34;7849:1;7841:6;7837:14;7830:58;7713:182;:::o;7901:366::-;8043:3;8064:67;8128:2;8123:3;8064:67;:::i;:::-;8057:74;;8140:93;8229:3;8140:93;:::i;:::-;8258:2;8253:3;8249:12;8242:19;;7901:366;;;:::o;8273:419::-;8439:4;8477:2;8466:9;8462:18;8454:26;;8526:9;8520:4;8516:20;8512:1;8501:9;8497:17;8490:47;8554:131;8680:4;8554:131;:::i;:::-;8546:139;;8273:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "808200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2837",
								"decimalFactor()": "2518",
								"decimals()": "2474",
								"mintToken()": "2756",
								"owner()": "2589",
								"renounceOwnership()": "30443",
								"symbol()": "infinite",
								"tokenName()": "infinite",
								"totalSupply()": "2475",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30832"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 182,
									"end": 2087,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 182,
									"end": 2087,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 182,
									"end": 2087,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 276,
									"end": 318,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 276,
									"end": 318,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 276,
									"end": 318,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "PUSH",
									"source": 3,
									"value": "E"
								},
								{
									"begin": 276,
									"end": 318,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 276,
									"end": 318,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "PUSH",
									"source": 3,
									"value": "77656233436C756273546F6B656E000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 318,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 318,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 318,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 276,
									"end": 318,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 318,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 276,
									"end": 318,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 352,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 352,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 352,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 324,
									"end": 352,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 324,
									"end": 352,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "PUSH",
									"source": 3,
									"value": "5743540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 352,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 324,
									"end": 352,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 324,
									"end": 352,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 324,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 324,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 324,
									"end": 352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 381,
									"end": 383,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 358,
									"end": 383,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 358,
									"end": 383,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 478,
									"end": 486,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 478,
									"end": 486,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 464,
									"end": 466,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 464,
									"end": 487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 464,
									"end": 487,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 464,
									"end": 487,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 464,
									"end": 487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 464,
									"end": 487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 464,
									"end": 487,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 464,
									"end": 487,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 436,
									"end": 487,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 436,
									"end": 487,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 549,
									"end": 562,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 549,
									"end": 562,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 539,
									"end": 546,
									"name": "PUSH",
									"source": 3,
									"value": "F4240"
								},
								{
									"begin": 539,
									"end": 562,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 539,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 539,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 539,
									"end": 562,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 539,
									"end": 562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 539,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 539,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 513,
									"end": 562,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 513,
									"end": 562,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 948,
									"end": 1012,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 948,
									"end": 1012,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 948,
									"end": 1012,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 948,
									"end": 1012,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 948,
									"end": 1012,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 948,
									"end": 1012,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 948,
									"end": 1012,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 948,
									"end": 1012,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 948,
									"end": 1012,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 948,
									"end": 1012,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 948,
									"end": 1012,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 994,
									"end": 1005,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 994,
									"end": 1005,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 970,
									"end": 979,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 970,
									"end": 991,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 980,
									"end": 990,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 970,
									"end": 991,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 970,
									"end": 991,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 970,
									"end": 991,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 970,
									"end": 991,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 970,
									"end": 991,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 970,
									"end": 991,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 970,
									"end": 991,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 970,
									"end": 991,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 970,
									"end": 991,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 970,
									"end": 991,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 970,
									"end": 991,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 970,
									"end": 991,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 970,
									"end": 991,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 970,
									"end": 991,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 970,
									"end": 991,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1005,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1005,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1005,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1005,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 182,
									"end": 2087,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 182,
									"end": 2087,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "87"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 4,
									"value": "87"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "89"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 4,
									"value": "89"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "91"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 4,
									"value": "91"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "92"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "93"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 4,
									"value": "93"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 4,
									"value": "92"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "94"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 4,
									"value": "94"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "95"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 4,
									"value": "95"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "97"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "98"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 4,
									"value": "98"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "99"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 4,
									"value": "99"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "96"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 4,
									"value": "97"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 4,
									"value": "101"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "103"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "101"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 4,
									"value": "103"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "104"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "105"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 4,
									"value": "105"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 4,
									"value": "104"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 4,
									"value": "96"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5282,
									"end": 5359,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5279,
									"end": 5280,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5360,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 5379,
									"end": 5383,
									"name": "PUSH",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 5376,
									"end": 5377,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 5369,
									"end": 5384,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 5403,
									"end": 5407,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 5400,
									"end": 5401,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5393,
									"end": 5408,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5462,
									"end": 5470,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5509,
									"end": 5514,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5506,
									"end": 5507,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 5502,
									"end": 5515,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5420,
									"end": 5522,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5596,
									"end": 5600,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5620,
									"end": 5626,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5644,
									"end": 5649,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 4,
									"value": "109"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5679,
									"end": 5680,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 5669,
									"end": 5677,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 5666,
									"end": 5681,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "111"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5774,
									"end": 5778,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5769,
									"end": 5772,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 5765,
									"end": 5779,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 5759,
									"end": 5763,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5756,
									"end": 5780,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "112"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "113"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 5783,
									"end": 5801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "tag",
									"source": 4,
									"value": "113"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "tag",
									"source": 4,
									"value": "112"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5833,
									"end": 5834,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 5823,
									"end": 5831,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 5819,
									"end": 5835,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6248,
									"end": 6252,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6241,
									"end": 6246,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6237,
									"end": 6253,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "tag",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6292,
									"end": 6296,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "115"
								},
								{
									"begin": 6351,
									"end": 6359,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 6328,
									"end": 6360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "tag",
									"source": 4,
									"value": "115"
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "109"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 4,
									"value": "111"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5528,
									"end": 6376,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6436,
									"end": 6441,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6627,
									"end": 6635,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "117"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6648,
									"end": 6649,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "116"
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "tag",
									"source": 4,
									"value": "117"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6676,
									"end": 6680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "118"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6693,
									"end": 6694,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "116"
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "tag",
									"source": 4,
									"value": "118"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6762,
									"end": 6766,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6811,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "120"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6846,
									"end": 6847,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "121"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "119"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "tag",
									"source": 4,
									"value": "120"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6823,
									"end": 6824,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "116"
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "tag",
									"source": 4,
									"value": "121"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6886,
									"end": 6889,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 6876,
									"end": 6884,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 6873,
									"end": 6890,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "122"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "123"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6893,
									"end": 6911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "tag",
									"source": 4,
									"value": "123"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "tag",
									"source": 4,
									"value": "122"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6942,
									"end": 6950,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6939,
									"end": 6940,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6935,
									"end": 6951,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6977,
									"end": 6980,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 6970,
									"end": 6975,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6967,
									"end": 6981,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "124"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "125"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6984,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "tag",
									"source": 4,
									"value": "125"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "tag",
									"source": 4,
									"value": "124"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "116"
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "tag",
									"source": 4,
									"value": "119"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7141,
									"end": 7143,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7131,
									"end": 7139,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7128,
									"end": 7144,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 7122,
									"end": 7125,
									"name": "PUSH",
									"source": 4,
									"value": "133"
								},
								{
									"begin": 7116,
									"end": 7120,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7113,
									"end": 7126,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 7109,
									"end": 7145,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7093,
									"name": "PUSH",
									"source": 4,
									"value": "4E"
								},
								{
									"begin": 7081,
									"end": 7089,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7078,
									"end": 7094,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7075,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 7067,
									"end": 7071,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7064,
									"end": 7076,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 7060,
									"end": 7095,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7044,
									"end": 7155,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "126"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7197,
									"end": 7205,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7191,
									"end": 7195,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7187,
									"end": 7206,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7232,
									"end": 7235,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7225,
									"end": 7230,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7222,
									"end": 7236,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "127"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "128"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7239,
									"end": 7257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "tag",
									"source": 4,
									"value": "128"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "tag",
									"source": 4,
									"value": "127"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "116"
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "tag",
									"source": 4,
									"value": "126"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "129"
								},
								{
									"begin": 7350,
									"end": 7353,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7340,
									"end": 7348,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7334,
									"end": 7338,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7331,
									"end": 7332,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 7312,
									"end": 7354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "tag",
									"source": 4,
									"value": "129"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7381,
									"end": 7384,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7377,
									"end": 7391,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 7370,
									"end": 7375,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7367,
									"end": 7392,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "130"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "131"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7395,
									"end": 7413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "tag",
									"source": 4,
									"value": "131"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "tag",
									"source": 4,
									"value": "130"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7444,
									"end": 7448,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7437,
									"end": 7442,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7433,
									"end": 7449,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 4,
									"value": "116"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6382,
									"end": 7455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7521,
									"end": 7526,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "133"
								},
								{
									"begin": 7563,
									"end": 7567,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 7545,
									"end": 7568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "tag",
									"source": 4,
									"value": "133"
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7537,
									"end": 7568,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7537,
									"end": 7568,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "134"
								},
								{
									"begin": 7607,
									"end": 7615,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 7589,
									"end": 7616,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "tag",
									"source": 4,
									"value": "134"
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7577,
									"end": 7616,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7577,
									"end": 7616,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "135"
								},
								{
									"begin": 7672,
									"end": 7738,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7662,
									"end": 7670,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7656,
									"end": 7660,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 7635,
									"end": 7739,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "tag",
									"source": 4,
									"value": "135"
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7626,
									"end": 7739,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7626,
									"end": 7739,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7461,
									"end": 7746,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7792,
									"end": 7799,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "137"
								},
								{
									"begin": 7833,
									"end": 7834,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 7815,
									"end": 7835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "tag",
									"source": 4,
									"value": "137"
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7810,
									"end": 7835,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7810,
									"end": 7835,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "138"
								},
								{
									"begin": 7867,
									"end": 7868,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 7849,
									"end": 7869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "tag",
									"source": 4,
									"value": "138"
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7844,
									"end": 7869,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7844,
									"end": 7869,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7897,
									"end": 7906,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "139"
								},
								{
									"begin": 7944,
									"end": 7955,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 7926,
									"end": 7956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "tag",
									"source": 4,
									"value": "139"
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7915,
									"end": 7956,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7915,
									"end": 7956,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8105,
									"end": 8106,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8096,
									"end": 8103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8092,
									"end": 8107,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 8089,
									"end": 8090,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 8086,
									"end": 8108,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 8066,
									"end": 8067,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 8059,
									"end": 8068,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 8039,
									"end": 8122,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "140"
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "141"
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8135,
									"end": 8153,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "tag",
									"source": 4,
									"value": "141"
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "tag",
									"source": 4,
									"value": "140"
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7800,
									"end": 8162,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7752,
									"end": 8162,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 182,
									"end": 2087,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 182,
									"end": 2087,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 182,
									"end": 2087,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 182,
									"end": 2087,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 182,
									"end": 2087,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 182,
									"end": 2087,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 182,
									"end": 2087,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 182,
									"end": 2087,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 182,
									"end": 2087,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220985efeb1f155be530bf918ee752e6eaba719d4ea5984b2039b4be32c7f65cb2264736f6c63430008120033",
									".code": [
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "6C02A931"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "6D6A6A4D"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "2004FFD9"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 182,
											"end": 2087,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1366,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1366,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1366,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 513,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 513,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 513,
											"end": 562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 513,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 562,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 513,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 513,
											"end": 562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 513,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 562,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2024,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1626,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1626,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1626,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 358,
											"end": 383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 358,
											"end": 383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 276,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 276,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 436,
											"end": 487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 436,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 436,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 436,
											"end": 487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 487,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 436,
											"end": 487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 436,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 436,
											"end": 487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 487,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 827,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 827,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 827,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 324,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 324,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 324,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1081,
											"end": 1360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1081,
											"end": 1360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1081,
											"end": 1360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 877,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 877,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 877,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1442,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1492,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1472,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1482,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1526,
											"end": 1534,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1514,
											"end": 1524,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1505,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1543,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 513,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 513,
											"end": 562,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 513,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1759,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1740,
											"end": 1766,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1740,
											"end": 1766,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1732,
											"end": 1767,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1767,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1767,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1767,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1767,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1732,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1804,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1823,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1823,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1777,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1777,
											"end": 1824,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1777,
											"end": 1824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1824,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1777,
											"end": 1824,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1777,
											"end": 1824,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1777,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1852,
											"end": 1858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1847,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1834,
											"end": 1858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1883,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1884,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1895,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1868,
											"end": 1906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1937,
											"end": 1940,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1942,
											"end": 1948,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1921,
											"end": 1949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1949,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 1970,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1959,
											"end": 1970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 1970,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 358,
											"end": 383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 276,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 276,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 276,
											"end": 318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 436,
											"end": 487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 436,
											"end": 487,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 436,
											"end": 487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 871,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 827,
											"end": 871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 324,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 324,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 324,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1145,
											"end": 1157,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1186,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1197,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1208,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1208,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1169,
											"end": 1209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1209,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1209,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1169,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1239,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1219,
											"end": 1250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1269,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1273,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1260,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1325,
											"end": 1331,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1299,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1332,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1349,
											"end": 1353,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1342,
											"end": 1353,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 877,
											"end": 941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1761,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1854,
											"end": 1875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1876,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2088,
											"end": 2089,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2086,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2070,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2026,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2191,
											"end": 2215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2325,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2361,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2357,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2440,
											"end": 2441,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2372,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2539,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2549,
											"end": 2555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2600,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2586,
											"end": 2595,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2577,
											"end": 2584,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2596,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2569,
											"end": 2601,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2604,
											"end": 2683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2725,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2794,
											"end": 2801,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2783,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 2792,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2749,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2802,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2802,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2898,
											"end": 2920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2877,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2930,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2877,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2930,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2930,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2822,
											"end": 2940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 2981,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3005,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3041,
											"end": 3047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3030,
											"end": 3039,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3005,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3058,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3005,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2995,
											"end": 3058,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2995,
											"end": 3058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 3068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 3075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3180,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3081,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3139,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3172,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3161,
											"end": 3173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3180,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3355,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3186,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3270,
											"end": 3281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3304,
											"end": 3310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3302,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3344,
											"end": 3348,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3342,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3335,
											"end": 3349,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3320,
											"end": 3349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3320,
											"end": 3349,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3355,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3355,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3361,
											"end": 3607,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3361,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3565,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3452,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3463,
											"end": 3464,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3460,
											"end": 3473,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3565,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3452,
											"end": 3565,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3546,
											"end": 3549,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3553,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3530,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3534,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3516,
											"end": 3555,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3490,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3485,
											"end": 3486,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3476,
											"end": 3491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3476,
											"end": 3491,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3452,
											"end": 3565,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3565,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3452,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3599,
											"end": 3600,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3590,
											"end": 3596,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3588,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3581,
											"end": 3597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3574,
											"end": 3601,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3423,
											"end": 3607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3361,
											"end": 3607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3361,
											"end": 3607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3361,
											"end": 3607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3361,
											"end": 3607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3715,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3613,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 3660,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3707,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3701,
											"end": 3708,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3689,
											"end": 3694,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3685,
											"end": 3699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3681,
											"end": 3709,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3671,
											"end": 3709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3671,
											"end": 3709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 4098,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3721,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3809,
											"end": 3812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3837,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3870,
											"end": 3875,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3837,
											"end": 3876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 3876,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3837,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3956,
											"end": 3962,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3954,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3892,
											"end": 3963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3963,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3892,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3885,
											"end": 3963,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3885,
											"end": 3963,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3972,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4030,
											"end": 4036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4025,
											"end": 4028,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4022,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4011,
											"end": 4016,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4023,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3972,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3972,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3972,
											"end": 4037,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3972,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4062,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 4084,
											"end": 4090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4062,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4062,
											"end": 4091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4062,
											"end": 4091,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 4062,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4060,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4092,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3813,
											"end": 4098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 4098,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 4098,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 4098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 4098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 4098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4417,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4104,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4217,
											"end": 4221,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4257,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4232,
											"end": 4258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4232,
											"end": 4258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4304,
											"end": 4313,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4302,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4290,
											"end": 4291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4279,
											"end": 4288,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4268,
											"end": 4315,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4332,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 4405,
											"end": 4409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4396,
											"end": 4402,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4332,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4332,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4332,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 4332,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4417,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4417,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4488,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4533,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4519,
											"end": 4528,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4510,
											"end": 4517,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4529,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4502,
											"end": 4534,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4618,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4499,
											"end": 4618,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4537,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4537,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4537,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4537,
											"end": 4616,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4537,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4618,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4499,
											"end": 4618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4658,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4727,
											"end": 4734,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4716,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4703,
											"end": 4725,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4682,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4628,
											"end": 4745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4758,
											"end": 4876,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4758,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4863,
											"end": 4868,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 4845,
											"end": 4869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 4869,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4845,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4843,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4870,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4758,
											"end": 4876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4758,
											"end": 4876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4758,
											"end": 4876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4882,
											"end": 5104,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4882,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4975,
											"end": 4979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5011,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 5016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 5016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5026,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 5094,
											"end": 5095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5083,
											"end": 5092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5079,
											"end": 5096,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5076,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5026,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5026,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5026,
											"end": 5097,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 5026,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4882,
											"end": 5104,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4882,
											"end": 5104,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4882,
											"end": 5104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4882,
											"end": 5104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4882,
											"end": 5104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5110,
											"end": 5584,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5110,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5178,
											"end": 5184,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5186,
											"end": 5192,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5235,
											"end": 5237,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5223,
											"end": 5232,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5221,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5233,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5206,
											"end": 5238,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5203,
											"end": 5322,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5203,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 5203,
											"end": 5322,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5241,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5241,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5241,
											"end": 5320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5241,
											"end": 5320,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5241,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5203,
											"end": 5322,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 5203,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5361,
											"end": 5362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5386,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 5431,
											"end": 5438,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5422,
											"end": 5428,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5411,
											"end": 5420,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5407,
											"end": 5429,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5386,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5386,
											"end": 5439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5386,
											"end": 5439,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 5386,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5376,
											"end": 5439,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5376,
											"end": 5439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5332,
											"end": 5449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5488,
											"end": 5490,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5514,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 5559,
											"end": 5566,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5550,
											"end": 5556,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5539,
											"end": 5548,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5535,
											"end": 5557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5514,
											"end": 5567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5567,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 5514,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5567,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5567,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5459,
											"end": 5577,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5110,
											"end": 5584,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5110,
											"end": 5584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5110,
											"end": 5584,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5110,
											"end": 5584,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5110,
											"end": 5584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5110,
											"end": 5584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5770,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5590,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5638,
											"end": 5715,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5635,
											"end": 5636,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5628,
											"end": 5716,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5739,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5732,
											"end": 5733,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5725,
											"end": 5740,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5759,
											"end": 5763,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5756,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5764,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5776,
											"end": 5967,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 5776,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5816,
											"end": 5819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5835,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 5853,
											"end": 5854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5835,
											"end": 5855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5855,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 5835,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5855,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 5887,
											"end": 5888,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5869,
											"end": 5889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5889,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 5869,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5864,
											"end": 5889,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5864,
											"end": 5889,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 5913,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5909,
											"end": 5910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5905,
											"end": 5914,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5898,
											"end": 5914,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5898,
											"end": 5914,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5933,
											"end": 5936,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5931,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5927,
											"end": 5937,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5924,
											"end": 5960,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5924,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 5924,
											"end": 5960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5940,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 5940,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5940,
											"end": 5958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5940,
											"end": 5958,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 5940,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5924,
											"end": 5960,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 5924,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5776,
											"end": 5967,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5776,
											"end": 5967,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5776,
											"end": 5967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5776,
											"end": 5967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5776,
											"end": 5967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5973,
											"end": 6167,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 5973,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6013,
											"end": 6017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 6051,
											"end": 6052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6033,
											"end": 6053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6053,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 6033,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6028,
											"end": 6053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6028,
											"end": 6053,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6067,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 6085,
											"end": 6086,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6067,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6067,
											"end": 6087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6067,
											"end": 6087,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 6067,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6062,
											"end": 6087,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6062,
											"end": 6087,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6111,
											"end": 6112,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6108,
											"end": 6109,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6104,
											"end": 6113,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6136,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6129,
											"end": 6133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6137,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6123,
											"end": 6160,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6123,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 6123,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6140,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6123,
											"end": 6160,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 6123,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5973,
											"end": 6167,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5973,
											"end": 6167,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5973,
											"end": 6167,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5973,
											"end": 6167,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5973,
											"end": 6167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6173,
											"end": 6353,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 6173,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6221,
											"end": 6298,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6218,
											"end": 6219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6299,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6318,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 6315,
											"end": 6316,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6308,
											"end": 6323,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6342,
											"end": 6346,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6339,
											"end": 6340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6332,
											"end": 6347,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 6679,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 6359,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6403,
											"end": 6409,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6440,
											"end": 6441,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6434,
											"end": 6438,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6442,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6442,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6487,
											"end": 6488,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6481,
											"end": 6485,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6477,
											"end": 6489,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6498,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 6498,
											"end": 6579,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6564,
											"end": 6568,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 6556,
											"end": 6562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6542,
											"end": 6569,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6542,
											"end": 6569,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6498,
											"end": 6579,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 6498,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6626,
											"end": 6628,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6624,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6615,
											"end": 6629,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6595,
											"end": 6613,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 6630,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6589,
											"end": 6673,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 6645,
											"end": 6663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6673,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6589,
											"end": 6673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6410,
											"end": 6679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 6679,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 6679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 6679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 6679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6910,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6685,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6825,
											"end": 6859,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6821,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6813,
											"end": 6819,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6809,
											"end": 6823,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6802,
											"end": 6860,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6894,
											"end": 6902,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6889,
											"end": 6891,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6887,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6877,
											"end": 6892,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6870,
											"end": 6903,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 7282,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 6916,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7061,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7079,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 7143,
											"end": 7145,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7138,
											"end": 7141,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 7079,
											"end": 7146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7146,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 7079,
											"end": 7146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7072,
											"end": 7146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7072,
											"end": 7146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7155,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 7244,
											"end": 7247,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7155,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 7155,
											"end": 7248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7155,
											"end": 7248,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 7155,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7273,
											"end": 7275,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7268,
											"end": 7271,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 7282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 7282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 7282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 7282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7707,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 7288,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7454,
											"end": 7458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7494,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7481,
											"end": 7490,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 7495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 7495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7541,
											"end": 7550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7535,
											"end": 7539,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7531,
											"end": 7551,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7527,
											"end": 7528,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7516,
											"end": 7525,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7512,
											"end": 7529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7505,
											"end": 7552,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7569,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 7695,
											"end": 7699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7569,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 7569,
											"end": 7700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7569,
											"end": 7700,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 7569,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 7700,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 7700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7713,
											"end": 7895,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 7713,
											"end": 7895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7853,
											"end": 7887,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7849,
											"end": 7850,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7841,
											"end": 7847,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7851,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7830,
											"end": 7888,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7713,
											"end": 7895,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7713,
											"end": 7895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7901,
											"end": 8267,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 7901,
											"end": 8267,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8043,
											"end": 8046,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8064,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 8128,
											"end": 8130,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8123,
											"end": 8126,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8064,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 8064,
											"end": 8131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8064,
											"end": 8131,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 8064,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8057,
											"end": 8131,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8057,
											"end": 8131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8140,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 8229,
											"end": 8232,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8140,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 8140,
											"end": 8233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8140,
											"end": 8233,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 8140,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8260,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8253,
											"end": 8256,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8249,
											"end": 8261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8242,
											"end": 8261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8242,
											"end": 8261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7901,
											"end": 8267,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7901,
											"end": 8267,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7901,
											"end": 8267,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7901,
											"end": 8267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8692,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 8273,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8439,
											"end": 8443,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8477,
											"end": 8479,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8466,
											"end": 8475,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8462,
											"end": 8480,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8454,
											"end": 8480,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8454,
											"end": 8480,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8526,
											"end": 8535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8516,
											"end": 8536,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8512,
											"end": 8513,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8501,
											"end": 8510,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8497,
											"end": 8514,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8490,
											"end": 8537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8554,
											"end": 8685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 8680,
											"end": 8684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8554,
											"end": 8685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 8554,
											"end": 8685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8554,
											"end": 8685,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 8554,
											"end": 8685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8546,
											"end": 8685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8546,
											"end": 8685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8692,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/web3Clubs/web3ClubsToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimalFactor()": "6d6a6a4d",
							"decimals()": "313ce567",
							"mintToken()": "2004ffd9",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"tokenName()": "6c02a931",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimalFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/web3Clubs/web3ClubsToken.sol\":\"web3ClubsToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/web3Clubs/web3ClubsToken.sol\":{\"keccak256\":\"0x5770a56e2e4eb0d3ad1b1a6868faabc8b28455aca7264c44f75d33b85fa48e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c7167b5b31863c3ba5674d208cfef84d360ead07b3b5e700f5e1100215e5a8d\",\"dweb:/ipfs/QmWAd5x6QQqM6sUWKcfSWpCR5dbvBgiNvuJspvEA1vqDPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/web3Clubs/web3ClubsToken.sol:web3ClubsToken",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 458,
								"contract": "contracts/web3Clubs/web3ClubsToken.sol:web3ClubsToken",
								"label": "tokenName",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 461,
								"contract": "contracts/web3Clubs/web3ClubsToken.sol:web3ClubsToken",
								"label": "symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 464,
								"contract": "contracts/web3Clubs/web3ClubsToken.sol:web3ClubsToken",
								"label": "decimals",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 472,
								"contract": "contracts/web3Clubs/web3ClubsToken.sol:web3ClubsToken",
								"label": "decimalFactor",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 477,
								"contract": "contracts/web3Clubs/web3ClubsToken.sol:web3ClubsToken",
								"label": "totalSupply",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 497,
								"contract": "contracts/web3Clubs/web3ClubsToken.sol:web3ClubsToken",
								"label": "balanceOf",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 503,
								"contract": "contracts/web3Clubs/web3ClubsToken.sol:web3ClubsToken",
								"label": "allowance",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							446
						]
					},
					"id": 447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 446,
							"linearizedBaseContracts": [
								446
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 167,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															150
														],
														"declarations": [
															{
																"constant": false,
																"id": 150,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 167,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 149,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 154,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 151,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 152,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 155,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 156,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 162,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 148,
															"id": 161,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 164,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 165,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 148,
														"id": 166,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 446,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 195,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 182,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 188,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 180,
															"id": 187,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 190,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 191,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 193,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 180,
														"id": 194,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 446,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 237,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 216,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 214,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 215,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															218
														],
														"declarations": [
															{
																"constant": false,
																"id": 218,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 237,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 217,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 222,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 219,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 220,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 223,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 224,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 226,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 232,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 230,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 231,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 234,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 235,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 208,
														"id": 236,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 446,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 258,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 250,
															"id": 257,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 261,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 263,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 250,
														"id": 264,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 446,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 293,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 286,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 284,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 278,
															"id": 285,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 288,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 289,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 291,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 278,
														"id": 292,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 446,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 305,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 306,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 304,
												"id": 308,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 446,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 320,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 321,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 319,
												"id": 323,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 446,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 335,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 336,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 338,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 446,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 350,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 351,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 349,
												"id": 353,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 446,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 365,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 366,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 364,
												"id": 368,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 446,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "5084:106:2",
										"statements": [
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 383,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "5126:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 384,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "5131:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 386,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "5134:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 382,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 388,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "5168:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 390,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "5172:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 381,
														"id": 392,
														"nodeType": "Return",
														"src": "5161:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "4981:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5000:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5019:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:2"
									},
									"scope": 446,
									"src": "4959:231:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "5799:105:2",
										"statements": [
											{
												"id": 418,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 408,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "5841:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 411,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "5848:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 407,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 413,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5882:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 415,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "5886:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 406,
														"id": 417,
														"nodeType": "Return",
														"src": "5875:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5696:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5715:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5734:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 401,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5790:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:2"
									},
									"scope": 446,
									"src": "5674:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "6675:105:2",
										"statements": [
											{
												"id": 443,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 433,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "6717:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 436,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "6724:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 432,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 438,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 439,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "6758:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 440,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "6762:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 431,
														"id": 442,
														"nodeType": "Return",
														"src": "6751:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6572:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6591:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6610:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 426,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6666:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:2"
									},
									"scope": 446,
									"src": "6550:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 447,
							"src": "482:6300:2",
							"usedErrors": []
						}
					],
					"src": "107:6676:2"
				},
				"id": 2
			},
			"contracts/web3Clubs/web3ClubsToken.sol": {
				"ast": {
					"absolutePath": "contracts/web3Clubs/web3ClubsToken.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						],
						"SafeMath": [
							446
						],
						"web3ClubsToken": [
							644
						]
					},
					"id": 645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 447,
							"src": "69:57:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 450,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 113,
							"src": "127:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 451,
										"name": "Ownable",
										"nameLocations": [
											"209:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "209:7:3"
									},
									"id": 452,
									"nodeType": "InheritanceSpecifier",
									"src": "209:7:3"
								}
							],
							"canonicalName": "web3ClubsToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 644,
							"linearizedBaseContracts": [
								644,
								112,
								134
							],
							"name": "web3ClubsToken",
							"nameLocation": "191:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 455,
									"libraryName": {
										"id": 453,
										"name": "SafeMath",
										"nameLocations": [
											"231:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 446,
										"src": "231:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "225:27:3",
									"typeName": {
										"id": 454,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "244:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "6c02a931",
									"id": 458,
									"mutability": "mutable",
									"name": "tokenName",
									"nameLocation": "290:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "276:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 456,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "276:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "77656233436c756273546f6b656e",
										"id": 457,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "302:16:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_af36faeed2b4510d6449f1fffca300f5696fcba2c1dc459fc906863a07655165",
											"typeString": "literal_string \"web3ClubsToken\""
										},
										"value": "web3ClubsToken"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 461,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "338:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "324:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 459,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "324:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "574354",
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "347:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c86c972ec5c054e0e517573f7718897d3ae8cbdee02e62c4a18b3c844e5560f5",
											"typeString": "literal_string \"WCT\""
										},
										"value": "WCT"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 464,
									"mutability": "mutable",
									"name": "decimals",
									"nameLocation": "370:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "358:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 462,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "358:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 463,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "381:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6d6a6a4d",
									"id": 472,
									"mutability": "mutable",
									"name": "decimalFactor",
									"nameLocation": "448:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "436:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 465,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "436:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 471,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 466,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "464:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"arguments": [
												{
													"id": 469,
													"name": "decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 464,
													"src": "478:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 468,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "470:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:3",
													"typeDescriptions": {}
												}
											},
											"id": 470,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "470:17:3",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "464:23:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 477,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "525:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "513:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 473,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "513:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 476,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030",
											"id": 474,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "539:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"id": 475,
											"name": "decimalFactor",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 472,
											"src": "549:13:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "539:23:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 485,
									"name": "Transfer",
									"nameLocation": "644:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "669:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "653:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "692:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "676:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "705:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "697:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "697:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:61:3"
									},
									"src": "638:76:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 493,
									"name": "Approval",
									"nameLocation": "725:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "750:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "734:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"indexed": true,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "774:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "758:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "792:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "784:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:66:3"
									},
									"src": "719:81:3"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 497,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "862:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "827:44:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 496,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 494,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "835:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "827:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 495,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "846:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 503,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "932:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "877:64:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 502,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 498,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "885:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "877:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 501,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 499,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "904:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "896:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 500,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "915:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "962:50:3",
										"statements": [
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 506,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "970:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 509,
														"indexExpression": {
															"expression": {
																"id": 507,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "980:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "984:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "980:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "970:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 510,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "994:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "970:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "970:35:3"
											}
										]
									},
									"id": 514,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:2:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "962:0:3"
									},
									"scope": 644,
									"src": "948:64:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "1159:201:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 524,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "1177:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 527,
																"indexExpression": {
																	"expression": {
																		"id": 525,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1187:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1191:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1187:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1177:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 528,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "1202:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1177:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1169:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1169:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "1169:40:3"
											},
											{
												"expression": {
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 532,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "1219:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 535,
														"indexExpression": {
															"expression": {
																"id": 533,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1229:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1233:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1229:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1219:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 536,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "1244:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1219:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "1219:31:3"
											},
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 539,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "1260:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 541,
														"indexExpression": {
															"id": 540,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "1270:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1260:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 542,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "1278:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1260:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "1260:24:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 546,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1308:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1312:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1308:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "1320:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "1325:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "1299:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1299:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "EmitStatement",
												"src": "1294:38:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1349:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 522,
												"id": 553,
												"nodeType": "Return",
												"src": "1342:11:3"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1090:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1107:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1099:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1120:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1112:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:30:3"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1150:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1145:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 520,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:14:3"
									},
									"scope": 644,
									"src": "1081:279:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "1444:128:3",
										"statements": [
											{
												"expression": {
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 564,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "1452:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 568,
															"indexExpression": {
																"expression": {
																	"id": 565,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1462:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1466:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1462:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1452:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 569,
														"indexExpression": {
															"id": 567,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "1474:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1452:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 570,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "1486:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1452:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "1452:40:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 574,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1514:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1518:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1514:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "1526:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "1536:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 573,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "1505:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1505:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "EmitStatement",
												"src": "1500:43:3"
											},
											{
												"expression": {
													"id": 580,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 562,
													"src": "1558:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 563,
												"id": 581,
												"nodeType": "Return",
												"src": "1551:14:3"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1375:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "1391:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "1383:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1406:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "1401:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1401:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:31:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1435:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "1430:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1430:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1429:14:3"
									},
									"scope": 644,
									"src": "1366:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "1722:258:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 595,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "1740:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 596,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "1750:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 598,
																"indexExpression": {
																	"id": 597,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "1760:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1750:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1740:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 594,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1732:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "1732:35:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 603,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "1785:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 604,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 503,
																		"src": "1795:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 606,
																	"indexExpression": {
																		"id": 605,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "1805:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1795:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 609,
																"indexExpression": {
																	"expression": {
																		"id": 607,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1812:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1816:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1812:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1795:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1785:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1777:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1777:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "1777:47:3"
											},
											{
												"expression": {
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 613,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "1834:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 615,
														"indexExpression": {
															"id": 614,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "1844:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 616,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1852:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1834:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "1834:24:3"
											},
											{
												"expression": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 619,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "1868:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 623,
															"indexExpression": {
																"id": 620,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "1878:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1868:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 624,
														"indexExpression": {
															"expression": {
																"id": 621,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1885:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1889:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1885:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1868:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 625,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1900:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1868:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "1868:38:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 629,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "1930:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 630,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "1937:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 631,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "1942:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 628,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "1921:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1921:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "EmitStatement",
												"src": "1916:33:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1966:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 593,
												"id": 635,
												"nodeType": "Return",
												"src": "1959:11:3"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1635:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1656:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "1648:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1671:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "1663:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1684:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "1676:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:44:3"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1713:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "1708:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 591,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1708:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:3"
									},
									"scope": 644,
									"src": "1626:354:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "2068:8:3",
										"statements": []
									},
									"functionSelector": "2004ffd9",
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 640,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 639,
												"name": "onlyOwner",
												"nameLocations": [
													"2058:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2058:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2058:9:3"
										}
									],
									"name": "mintToken",
									"nameLocation": "2033:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:2:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2068:0:3"
									},
									"scope": 644,
									"src": "2024:52:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 645,
							"src": "182:1905:3",
							"usedErrors": []
						}
					],
					"src": "32:2061:3"
				},
				"id": 3
			}
		}
	}
}